//==================================================================================================
// 
// Generated AI Script
// 
// AI Name: P02 Amon Zerg Hordes
// 
//==================================================================================================
include "TriggerLibs/natives"
include "TriggerLibs/AI"
include "TriggerLibs/Computer"

//--------------------------------------------------------------------------------------------------
// Globals
//--------------------------------------------------------------------------------------------------
point[17] ai5D126363_defGather;
string[17] ai5D126363_customData;
wave[17] ai5D126363_lastWave;

//--------------------------------------------------------------------------------------------------
// Attack Wave: Wave 1 - Initial Attack Q
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave2_enabled;
unitgroup[17] ai5D126363_wave2_lastUnits;
wave[17] ai5D126363_wave2_lastWave;
trigger ai5D126363_wave2_trigger = null;
int ai5D126363_wave2_runPlayer;
playergroup ai5D126363_wave2_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave2_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave2_enabled[init_i] = true;
        ai5D126363_wave2_lastUnits[init_i] = null;
        ai5D126363_wave2_lastWave[init_i] = null;
    }

    ai5D126363_wave2_trigger = TriggerCreate("ai5D126363_wave2_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave2_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave2_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave2_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave2_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave2_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave2_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave2_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave2_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave2_runFunc (bool c, bool a) {
    int p = ai5D126363_wave2_runPlayer;
    playergroup target = ai5D126363_wave2_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave2_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 30; }
    if (d == 2) { ta = 30; }
    if (d == 3) { ta = 30; }
    if (d == 4) { ta = 30; }
    tg = 0;
    if (d == 1) { tg = 50; }
    if (d == 2) { tg = 50; }
    if (d == 3) { tg = 50; }
    if (d == 4) { tg = 50; }
    ts = ta;
    TriggerExecute(TriggerFind("gt_ReportVorazunInitialAttackVorazun_Func"), true, false);
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(293));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(244);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(512);

    ai5D126363_wave2_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 18; }
    if (d == 2) { createCount = 18; }
    if (d == 3) { createCount = 18; }
    if (d == 4) { createCount = 18; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave2_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 8; }
    if (d == 4) { createCount = 8; }
    if (createCount > 0) {
        UnitCreate(createCount, "Roach", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave2_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 4; }
    if (d == 2) { createCount = 4; }
    if (d == 3) { createCount = 4; }
    if (d == 4) { createCount = 5; }
    if (createCount > 0) {
        UnitCreate(createCount, "Mutalisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave2_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave2_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave2_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave2_run (int p, playergroup target, bool wait) {
    ai5D126363_wave2_runPlayer = p;
    ai5D126363_wave2_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave2_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: TAL - Initial Attack Q
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave23_enabled;
unitgroup[17] ai5D126363_wave23_lastUnits;
wave[17] ai5D126363_wave23_lastWave;
trigger ai5D126363_wave23_trigger = null;
int ai5D126363_wave23_runPlayer;
playergroup ai5D126363_wave23_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave23_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave23_enabled[init_i] = true;
        ai5D126363_wave23_lastUnits[init_i] = null;
        ai5D126363_wave23_lastWave[init_i] = null;
    }

    ai5D126363_wave23_trigger = TriggerCreate("ai5D126363_wave23_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave23_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave23_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave23_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave23_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave23_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave23_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave23_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave23_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave23_runFunc (bool c, bool a) {
    int p = ai5D126363_wave23_runPlayer;
    playergroup target = ai5D126363_wave23_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave23_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 270; }
    if (d == 2) { ta = 160; }
    if (d == 3) { ta = 160; }
    if (d == 4) { ta = 160; }
    tg = 0;
    if (d == 1) { tg = 50; }
    if (d == 2) { tg = 50; }
    if (d == 3) { tg = 50; }
    if (d == 4) { tg = 50; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ReportAlarakInitialAttackAlarak_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(275));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(245);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);
    if ((d == 2) || (d == 3) || (d == 4)) {
        AIAttackWaveAddWaypoint(p, PointFromId(965437914), false);
    }

    createPoint = gatherPoint;
    createPoint = PointFromId(513);

    ai5D126363_wave23_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 24; }
    if (d == 2) { createCount = 24; }
    if (d == 3) { createCount = 24; }
    if (d == 4) { createCount = 24; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave23_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 3; }
    if (createCount > 0) {
        UnitCreate(createCount, "Ultralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave23_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 8; }
    if (d == 2) { createCount = 8; }
    if (d == 3) { createCount = 8; }
    if (d == 4) { createCount = 10; }
    if (createCount > 0) {
        UnitCreate(createCount, "Hydralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave23_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave23_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave23_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave23_run (int p, playergroup target, bool wait) {
    ai5D126363_wave23_runPlayer = p;
    ai5D126363_wave23_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave23_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: Wave 1 - Initial Attack Q Copy
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave11_enabled;
unitgroup[17] ai5D126363_wave11_lastUnits;
wave[17] ai5D126363_wave11_lastWave;
trigger ai5D126363_wave11_trigger = null;
int ai5D126363_wave11_runPlayer;
playergroup ai5D126363_wave11_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave11_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave11_enabled[init_i] = true;
        ai5D126363_wave11_lastUnits[init_i] = null;
        ai5D126363_wave11_lastWave[init_i] = null;
    }

    ai5D126363_wave11_trigger = TriggerCreate("ai5D126363_wave11_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave11_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave11_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave11_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave11_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave11_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave11_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave11_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave11_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave11_runFunc (bool c, bool a) {
    int p = ai5D126363_wave11_runPlayer;
    playergroup target = ai5D126363_wave11_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave11_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 300; }
    if (d == 2) { ta = 130; }
    if (d == 3) { ta = 130; }
    if (d == 4) { ta = 130; }
    tg = 0;
    if (d == 1) { tg = 50; }
    if (d == 2) { tg = 50; }
    if (d == 3) { tg = 50; }
    if (d == 4) { tg = 50; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ReportKaraxInitialAttackKarax_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(272));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(246);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(294);

    ai5D126363_wave11_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 16; }
    if (d == 2) { createCount = 16; }
    if (d == 3) { createCount = 16; }
    if (d == 4) { createCount = 16; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave11_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 4; }
    if (d == 4) { createCount = 5; }
    if (createCount > 0) {
        UnitCreate(createCount, "Mutalisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave11_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 4; }
    if (d == 2) { createCount = 4; }
    if (d == 3) { createCount = 5; }
    if (d == 4) { createCount = 6; }
    if (createCount > 0) {
        UnitCreate(createCount, "Roach", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave11_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 4; }
    if (d == 2) { createCount = 4; }
    if (d == 3) { createCount = 5; }
    if (d == 4) { createCount = 6; }
    if (createCount > 0) {
        UnitCreate(createCount, "Hydralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave11_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave11_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave11_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave11_run (int p, playergroup target, bool wait) {
    ai5D126363_wave11_runPlayer = p;
    ai5D126363_wave11_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave11_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave12_enabled;
unitgroup[17] ai5D126363_wave12_lastUnits;
wave[17] ai5D126363_wave12_lastWave;
trigger ai5D126363_wave12_trigger = null;
int ai5D126363_wave12_runPlayer;
playergroup ai5D126363_wave12_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave12_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave12_enabled[init_i] = true;
        ai5D126363_wave12_lastUnits[init_i] = null;
        ai5D126363_wave12_lastWave[init_i] = null;
    }

    ai5D126363_wave12_trigger = TriggerCreate("ai5D126363_wave12_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave12_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave12_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave12_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave12_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave12_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave12_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave12_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave12_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave12_runFunc (bool c, bool a) {
    int p = ai5D126363_wave12_runPlayer;
    playergroup target = ai5D126363_wave12_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave12_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 30; }
    if (d == 2) { ta = 30; }
    if (d == 3) { ta = 30; }
    if (d == 4) { ta = 30; }
    tg = 0;
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(1214832646));
    AIAttackWaveSetTargetPoint(p, PointFromId(216491687));
    AIAttackWaveSetTargetPoint(p, PointFromId(1507949892));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);
    AIAttackWaveAddWaypoint(p, PointFromId(1359315764), false);
    AIAttackWaveAddWaypoint(p, PointFromId(808268244), false);
    AIAttackWaveAddWaypoint(p, PointFromId(873437838), false);
    AIAttackWaveAddWaypoint(p, PointFromId(2137340507), false);
    AIAttackWaveAddWaypoint(p, PointFromId(1199314395), false);

    createPoint = gatherPoint;
    createPoint = PointFromId(1418082495);

    ai5D126363_wave12_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 22; }
    if (d == 2) { createCount = 26; }
    if (d == 3) { createCount = 30; }
    if (d == 4) { createCount = 34; }
    if (createCount > 0) {
        UnitCreate(createCount, "HotSRaptor", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave12_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 10; }
    if (d == 2) { createCount = 12; }
    if (d == 3) { createCount = 14; }
    if (d == 4) { createCount = 16; }
    if (createCount > 0) {
        UnitCreate(createCount, "HotSHunter", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave12_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave12_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave12_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave12_run (int p, playergroup target, bool wait) {
    ai5D126363_wave12_runPlayer = p;
    ai5D126363_wave12_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave12_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave13_enabled;
unitgroup[17] ai5D126363_wave13_lastUnits;
wave[17] ai5D126363_wave13_lastWave;
trigger ai5D126363_wave13_trigger = null;
int ai5D126363_wave13_runPlayer;
playergroup ai5D126363_wave13_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave13_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave13_enabled[init_i] = true;
        ai5D126363_wave13_lastUnits[init_i] = null;
        ai5D126363_wave13_lastWave[init_i] = null;
    }

    ai5D126363_wave13_trigger = TriggerCreate("ai5D126363_wave13_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave13_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave13_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave13_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave13_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave13_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave13_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave13_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave13_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave13_runFunc (bool c, bool a) {
    int p = ai5D126363_wave13_runPlayer;
    playergroup target = ai5D126363_wave13_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave13_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 15; }
    if (d == 2) { ta = 15; }
    if (d == 3) { ta = 15; }
    if (d == 4) { ta = 30; }
    tg = 0;
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(735773483));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(1619156054);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(456043313);

    ai5D126363_wave13_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 22; }
    if (d == 2) { createCount = 24; }
    if (d == 3) { createCount = 26; }
    if (d == 4) { createCount = 28; }
    if (createCount > 0) {
        UnitCreate(createCount, "HotSRaptor", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave13_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 14; }
    if (d == 2) { createCount = 16; }
    if (d == 3) { createCount = 18; }
    if (d == 4) { createCount = 20; }
    if (createCount > 0) {
        UnitCreate(createCount, "HotSHunter", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave13_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave13_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave13_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave13_run (int p, playergroup target, bool wait) {
    ai5D126363_wave13_runPlayer = p;
    ai5D126363_wave13_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave13_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: TER 1
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave31_enabled;
unitgroup[17] ai5D126363_wave31_lastUnits;
wave[17] ai5D126363_wave31_lastWave;
trigger ai5D126363_wave31_trigger = null;
int ai5D126363_wave31_runPlayer;
playergroup ai5D126363_wave31_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave31_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave31_enabled[init_i] = true;
        ai5D126363_wave31_lastUnits[init_i] = null;
        ai5D126363_wave31_lastWave[init_i] = null;
    }

    ai5D126363_wave31_trigger = TriggerCreate("ai5D126363_wave31_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave31_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave31_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave31_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave31_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave31_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave31_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave31_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave31_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave31_runFunc (bool c, bool a) {
    int p = ai5D126363_wave31_runPlayer;
    playergroup target = ai5D126363_wave31_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave31_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 330; }
    if (d == 2) { ta = 180; }
    if (d == 3) { ta = 180; }
    if (d == 4) { ta = 180; }
    tg = 0;
    if (d == 1) { tg = 45; }
    if (d == 2) { tg = 45; }
    if (d == 3) { tg = 45; }
    if (d == 4) { tg = 45; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(1507949892));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(1865764243);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(1418082495);

    ai5D126363_wave31_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 20; }
    if (d == 2) { createCount = 20; }
    if (d == 3) { createCount = 20; }
    if (d == 4) { createCount = 20; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave31_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 6; }
    if (d == 4) { createCount = 8; }
    if (createCount > 0) {
        UnitCreate(createCount, "Hydralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave31_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "InfestedAbomination", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave31_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 4; }
    if (d == 2) { createCount = 4; }
    if (d == 3) { createCount = 5; }
    if (d == 4) { createCount = 5; }
    if (createCount > 0) {
        UnitCreate(createCount, "Mutalisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave31_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 1; }
    if (d == 2) { createCount = 1; }
    if (d == 3) { createCount = 1; }
    if (d == 4) { createCount = 1; }
    if (createCount > 0) {
        UnitCreate(createCount, "Overseer", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave31_lastUnits[p], UnitLastCreatedGroup());
    }

    TriggerExecute(TriggerFind("gt_ReportRaynorZergStreamingAttackRaynor_Func"), true, false);
    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave31_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave31_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave31_run (int p, playergroup target, bool wait) {
    ai5D126363_wave31_runPlayer = p;
    ai5D126363_wave31_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave31_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave6_enabled;
unitgroup[17] ai5D126363_wave6_lastUnits;
wave[17] ai5D126363_wave6_lastWave;
trigger ai5D126363_wave6_trigger = null;
int ai5D126363_wave6_runPlayer;
playergroup ai5D126363_wave6_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave6_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave6_enabled[init_i] = true;
        ai5D126363_wave6_lastUnits[init_i] = null;
        ai5D126363_wave6_lastWave[init_i] = null;
    }

    ai5D126363_wave6_trigger = TriggerCreate("ai5D126363_wave6_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave6_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave6_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave6_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave6_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave6_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave6_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave6_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave6_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave6_runFunc (bool c, bool a) {
    int p = ai5D126363_wave6_runPlayer;
    playergroup target = ai5D126363_wave6_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave6_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 180; }
    if (d == 2) { ta = 180; }
    if (d == 3) { ta = 180; }
    if (d == 4) { ta = 180; }
    tg = 0;
    if (d == 1) { tg = 45; }
    if (d == 2) { tg = 45; }
    if (d == 3) { tg = 45; }
    if (d == 4) { tg = 45; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(293));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(244);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(512);

    ai5D126363_wave6_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 20; }
    if (d == 2) { createCount = 20; }
    if (d == 3) { createCount = 20; }
    if (d == 4) { createCount = 20; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave6_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 6; }
    if (d == 4) { createCount = 8; }
    if (createCount > 0) {
        UnitCreate(createCount, "Hydralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave6_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "InfestedAbomination", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave6_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 4; }
    if (d == 2) { createCount = 4; }
    if (d == 3) { createCount = 5; }
    if (d == 4) { createCount = 5; }
    if (createCount > 0) {
        UnitCreate(createCount, "Mutalisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave6_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 1; }
    if (d == 2) { createCount = 1; }
    if (d == 3) { createCount = 1; }
    if (d == 4) { createCount = 1; }
    if (createCount > 0) {
        UnitCreate(createCount, "Overseer", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave6_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave6_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave6_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave6_run (int p, playergroup target, bool wait) {
    ai5D126363_wave6_runPlayer = p;
    ai5D126363_wave6_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave6_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: TAL 2 - Streaming Wave 1 Q Copy
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave50_enabled;
wave[17] ai5D126363_wave50_lastWave;
trigger ai5D126363_wave50_trigger = null;
int ai5D126363_wave50_runPlayer;
playergroup ai5D126363_wave50_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave50_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave50_enabled[init_i] = true;
        ai5D126363_wave50_lastWave[init_i] = null;
    }

    ai5D126363_wave50_trigger = TriggerCreate("ai5D126363_wave50_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave50_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave50_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave50_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave50_enabled[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave50_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave50_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave50_runFunc (bool c, bool a) {
    int p = ai5D126363_wave50_runPlayer;
    playergroup target = ai5D126363_wave50_runTarget;
    int d;
    point gatherPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave50_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 50; }
    if (d == 2) { ta = 50; }
    if (d == 3) { ta = 50; }
    if (d == 4) { ta = 50; }
    tg = 0;
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    Wait(ts, c_timeAI);
    TriggerExecute(TriggerFind("gt_ReportKaraxArmadaWarning_Func"), true, false);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave50_run (int p, playergroup target, bool wait) {
    ai5D126363_wave50_runPlayer = p;
    ai5D126363_wave50_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave50_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: TAL 2 - Streaming Wave 1 Q
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave24_enabled;
wave[17] ai5D126363_wave24_lastWave;
trigger ai5D126363_wave24_trigger = null;
int ai5D126363_wave24_runPlayer;
playergroup ai5D126363_wave24_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave24_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave24_enabled[init_i] = true;
        ai5D126363_wave24_lastWave[init_i] = null;
    }

    ai5D126363_wave24_trigger = TriggerCreate("ai5D126363_wave24_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave24_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave24_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave24_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave24_enabled[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave24_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave24_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave24_runFunc (bool c, bool a) {
    int p = ai5D126363_wave24_runPlayer;
    playergroup target = ai5D126363_wave24_runTarget;
    int d;
    point gatherPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave24_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 300; }
    if (d == 2) { ta = 300; }
    if (d == 3) { ta = 300; }
    if (d == 4) { ta = 300; }
    tg = 0;
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    Wait(ts, c_timeAI);
    TriggerExecute(TriggerFind("gt_StreamingWave01TAL_Func"), true, false);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave24_run (int p, playergroup target, bool wait) {
    ai5D126363_wave24_runPlayer = p;
    ai5D126363_wave24_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave24_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave10_enabled;
unitgroup[17] ai5D126363_wave10_lastUnits;
wave[17] ai5D126363_wave10_lastWave;
trigger ai5D126363_wave10_trigger = null;
int ai5D126363_wave10_runPlayer;
playergroup ai5D126363_wave10_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave10_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave10_enabled[init_i] = true;
        ai5D126363_wave10_lastUnits[init_i] = null;
        ai5D126363_wave10_lastWave[init_i] = null;
    }

    ai5D126363_wave10_trigger = TriggerCreate("ai5D126363_wave10_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave10_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave10_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave10_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave10_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave10_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave10_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave10_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave10_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave10_runFunc (bool c, bool a) {
    int p = ai5D126363_wave10_runPlayer;
    playergroup target = ai5D126363_wave10_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave10_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    tg = 0;
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(155367092));
    AIAttackWaveSetTargetPoint(p, PointFromId(848487479));
    AIAttackWaveSetTargetPoint(p, PointFromId(1507949892));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);
    AIAttackWaveAddWaypoint(p, PointFromId(1684124710), false);
    AIAttackWaveAddWaypoint(p, PointFromId(1779634909), false);
    AIAttackWaveAddWaypoint(p, PointFromId(764102290), false);

    createPoint = gatherPoint;
    createPoint = PointFromId(1418082495);

    ai5D126363_wave10_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 15; }
    if (d == 2) { createCount = 20; }
    if (d == 3) { createCount = 25; }
    if (d == 4) { createCount = 30; }
    if (createCount > 0) {
        UnitCreate(createCount, "HotSRaptor", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave10_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 10; }
    if (d == 2) { createCount = 12; }
    if (d == 3) { createCount = 14; }
    if (d == 4) { createCount = 16; }
    if (createCount > 0) {
        UnitCreate(createCount, "HotSHunter", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave10_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave10_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave10_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave10_run (int p, playergroup target, bool wait) {
    ai5D126363_wave10_runPlayer = p;
    ai5D126363_wave10_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave10_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave14_enabled;
unitgroup[17] ai5D126363_wave14_lastUnits;
wave[17] ai5D126363_wave14_lastWave;
trigger ai5D126363_wave14_trigger = null;
int ai5D126363_wave14_runPlayer;
playergroup ai5D126363_wave14_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave14_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave14_enabled[init_i] = true;
        ai5D126363_wave14_lastUnits[init_i] = null;
        ai5D126363_wave14_lastWave[init_i] = null;
    }

    ai5D126363_wave14_trigger = TriggerCreate("ai5D126363_wave14_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave14_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave14_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave14_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave14_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave14_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave14_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave14_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave14_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave14_runFunc (bool c, bool a) {
    int p = ai5D126363_wave14_runPlayer;
    playergroup target = ai5D126363_wave14_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave14_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 15; }
    if (d == 2) { ta = 15; }
    if (d == 3) { ta = 15; }
    if (d == 4) { ta = 15; }
    tg = 0;
    if (d == 1) { tg = 45; }
    if (d == 2) { tg = 45; }
    if (d == 3) { tg = 45; }
    if (d == 4) { tg = 45; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(272));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(246);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(294);

    ai5D126363_wave14_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 24; }
    if (d == 2) { createCount = 28; }
    if (d == 3) { createCount = 32; }
    if (d == 4) { createCount = 36; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave14_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 4; }
    if (d == 4) { createCount = 5; }
    if (createCount > 0) {
        UnitCreate(createCount, "Ultralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave14_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 8; }
    if (d == 4) { createCount = 8; }
    if (createCount > 0) {
        UnitCreate(createCount, "Mutalisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave14_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave14_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave14_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave14_run (int p, playergroup target, bool wait) {
    ai5D126363_wave14_runPlayer = p;
    ai5D126363_wave14_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave14_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: ARMADA Wave 1
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave49_enabled;
unitgroup[17] ai5D126363_wave49_lastUnits;
wave[17] ai5D126363_wave49_lastWave;
trigger ai5D126363_wave49_trigger = null;
int ai5D126363_wave49_runPlayer;
playergroup ai5D126363_wave49_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave49_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave49_enabled[init_i] = true;
        ai5D126363_wave49_lastUnits[init_i] = null;
        ai5D126363_wave49_lastWave[init_i] = null;
    }

    ai5D126363_wave49_trigger = TriggerCreate("ai5D126363_wave49_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave49_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave49_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave49_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave49_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave49_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave49_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave49_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave49_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave49_runFunc (bool c, bool a) {
    int p = ai5D126363_wave49_runPlayer;
    playergroup target = ai5D126363_wave49_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave49_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 30; }
    if (d == 2) { ta = 30; }
    if (d == 3) { ta = 30; }
    if (d == 4) { ta = 30; }
    tg = 0;
    if (d == 1) { tg = 30; }
    if (d == 2) { tg = 30; }
    if (d == 3) { tg = 30; }
    if (d == 4) { tg = 30; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack1Mid_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(275));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(245);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(513);

    ai5D126363_wave49_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 20; }
    if (d == 2) { createCount = 20; }
    if (d == 3) { createCount = 20; }
    if (d == 4) { createCount = 20; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zealot", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave49_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 8; }
    if (d == 2) { createCount = 8; }
    if (d == 3) { createCount = 10; }
    if (d == 4) { createCount = 10; }
    if (createCount > 0) {
        UnitCreate(createCount, "Dragoon", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave49_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 2; }
    if (d == 4) { createCount = 3; }
    if (createCount > 0) {
        UnitCreate(createCount, "Colossus", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave49_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave49_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave49_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave49_run (int p, playergroup target, bool wait) {
    ai5D126363_wave49_runPlayer = p;
    ai5D126363_wave49_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave49_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: TAL 4 - Streaming Wave 2 Q
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave25_enabled;
unitgroup[17] ai5D126363_wave25_lastUnits;
wave[17] ai5D126363_wave25_lastWave;
trigger ai5D126363_wave25_trigger = null;
int ai5D126363_wave25_runPlayer;
playergroup ai5D126363_wave25_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave25_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave25_enabled[init_i] = true;
        ai5D126363_wave25_lastUnits[init_i] = null;
        ai5D126363_wave25_lastWave[init_i] = null;
    }

    ai5D126363_wave25_trigger = TriggerCreate("ai5D126363_wave25_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave25_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave25_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave25_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave25_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave25_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave25_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave25_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave25_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave25_runFunc (bool c, bool a) {
    int p = ai5D126363_wave25_runPlayer;
    playergroup target = ai5D126363_wave25_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave25_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 240; }
    if (d == 2) { ta = 240; }
    if (d == 3) { ta = 240; }
    if (d == 4) { ta = 240; }
    tg = 0;
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;

    ai5D126363_wave25_lastUnits[p] = UnitGroupEmpty();

    Wait(ts, c_timeAI);
    TriggerExecute(TriggerFind("gt_StreamingWave02TAL_Func"), true, false);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave25_run (int p, playergroup target, bool wait) {
    ai5D126363_wave25_runPlayer = p;
    ai5D126363_wave25_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave25_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave15_enabled;
unitgroup[17] ai5D126363_wave15_lastUnits;
wave[17] ai5D126363_wave15_lastWave;
trigger ai5D126363_wave15_trigger = null;
int ai5D126363_wave15_runPlayer;
playergroup ai5D126363_wave15_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave15_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave15_enabled[init_i] = true;
        ai5D126363_wave15_lastUnits[init_i] = null;
        ai5D126363_wave15_lastWave[init_i] = null;
    }

    ai5D126363_wave15_trigger = TriggerCreate("ai5D126363_wave15_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave15_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave15_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave15_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave15_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave15_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave15_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave15_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave15_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave15_runFunc (bool c, bool a) {
    int p = ai5D126363_wave15_runPlayer;
    playergroup target = ai5D126363_wave15_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave15_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 60; }
    if (d == 2) { ta = 60; }
    if (d == 3) { ta = 60; }
    if (d == 4) { ta = 60; }
    tg = 0;
    if (d == 1) { tg = 45; }
    if (d == 2) { tg = 45; }
    if (d == 3) { tg = 45; }
    if (d == 4) { tg = 45; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(1453462992));
    AIAttackWaveSetTargetPoint(p, PointFromId(29960549));
    AIAttackWaveSetTargetPoint(p, PointFromId(1454623088));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);
    AIAttackWaveAddWaypoint(p, PointFromId(1791909586), false);
    AIAttackWaveAddWaypoint(p, PointFromId(1046629539), false);
    AIAttackWaveAddWaypoint(p, PointFromId(2091170237), false);

    createPoint = gatherPoint;
    createPoint = PointFromId(378157272);

    ai5D126363_wave15_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 24; }
    if (d == 2) { createCount = 24; }
    if (d == 3) { createCount = 32; }
    if (d == 4) { createCount = 32; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave15_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 2; }
    if (d == 4) { createCount = 3; }
    if (createCount > 0) {
        UnitCreate(createCount, "Ultralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave15_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 8; }
    if (d == 4) { createCount = 8; }
    if (createCount > 0) {
        UnitCreate(createCount, "Mutalisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave15_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave15_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave15_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave15_run (int p, playergroup target, bool wait) {
    ai5D126363_wave15_runPlayer = p;
    ai5D126363_wave15_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave15_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: ARMADA Wave 2 - Q
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave37_enabled;
unitgroup[17] ai5D126363_wave37_lastUnits;
wave[17] ai5D126363_wave37_lastWave;
trigger ai5D126363_wave37_trigger = null;
int ai5D126363_wave37_runPlayer;
playergroup ai5D126363_wave37_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave37_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave37_enabled[init_i] = true;
        ai5D126363_wave37_lastUnits[init_i] = null;
        ai5D126363_wave37_lastWave[init_i] = null;
    }

    ai5D126363_wave37_trigger = TriggerCreate("ai5D126363_wave37_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave37_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave37_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave37_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave37_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave37_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave37_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave37_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave37_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave37_runFunc (bool c, bool a) {
    int p = ai5D126363_wave37_runPlayer;
    playergroup target = ai5D126363_wave37_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave37_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 220; }
    if (d == 2) { ta = 220; }
    if (d == 3) { ta = 220; }
    if (d == 4) { ta = 220; }
    tg = 0;
    if (d == 1) { tg = 40; }
    if (d == 2) { tg = 40; }
    if (d == 3) { tg = 40; }
    if (d == 4) { tg = 40; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack2TopMid_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(293));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(244);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(512);

    ai5D126363_wave37_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 12; }
    if (d == 2) { createCount = 12; }
    if (d == 3) { createCount = 12; }
    if (d == 4) { createCount = 12; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zealot", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave37_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 9; }
    if (d == 4) { createCount = 9; }
    if (createCount > 0) {
        UnitCreate(createCount, "Dragoon", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave37_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Immortal", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave37_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave37_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave37_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave37_run (int p, playergroup target, bool wait) {
    ai5D126363_wave37_runPlayer = p;
    ai5D126363_wave37_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave37_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: TER 2
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave32_enabled;
unitgroup[17] ai5D126363_wave32_lastUnits;
wave[17] ai5D126363_wave32_lastWave;
trigger ai5D126363_wave32_trigger = null;
int ai5D126363_wave32_runPlayer;
playergroup ai5D126363_wave32_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave32_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave32_enabled[init_i] = true;
        ai5D126363_wave32_lastUnits[init_i] = null;
        ai5D126363_wave32_lastWave[init_i] = null;
    }

    ai5D126363_wave32_trigger = TriggerCreate("ai5D126363_wave32_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave32_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave32_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave32_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave32_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave32_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave32_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave32_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave32_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave32_runFunc (bool c, bool a) {
    int p = ai5D126363_wave32_runPlayer;
    playergroup target = ai5D126363_wave32_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave32_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 180; }
    if (d == 2) { ta = 180; }
    if (d == 3) { ta = 180; }
    if (d == 4) { ta = 180; }
    tg = 0;
    if (d == 1) { tg = 50; }
    if (d == 2) { tg = 50; }
    if (d == 3) { tg = 50; }
    if (d == 4) { tg = 50; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(1507949892));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(1865764243);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);
    AIAttackWaveAddWaypoint(p, PointFromId(1749555049), false);

    createPoint = gatherPoint;
    createPoint = PointFromId(1418082495);

    ai5D126363_wave32_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 30; }
    if (d == 2) { createCount = 30; }
    if (d == 3) { createCount = 30; }
    if (d == 4) { createCount = 30; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave32_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 16; }
    if (d == 2) { createCount = 16; }
    if (d == 3) { createCount = 16; }
    if (d == 4) { createCount = 16; }
    if (createCount > 0) {
        UnitCreate(createCount, "Hydralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave32_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 1; }
    if (d == 2) { createCount = 1; }
    if (d == 3) { createCount = 2; }
    if (d == 4) { createCount = 2; }
    if (createCount > 0) {
        UnitCreate(createCount, "Ultralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave32_lastUnits[p], UnitLastCreatedGroup());
    }

    TriggerExecute(TriggerFind("gt_ReportRaynorZergStreamingAttacks4entrances_Func"), true, false);
    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave32_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave32_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave32_run (int p, playergroup target, bool wait) {
    ai5D126363_wave32_runPlayer = p;
    ai5D126363_wave32_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave32_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave7_enabled;
unitgroup[17] ai5D126363_wave7_lastUnits;
wave[17] ai5D126363_wave7_lastWave;
trigger ai5D126363_wave7_trigger = null;
int ai5D126363_wave7_runPlayer;
playergroup ai5D126363_wave7_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave7_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave7_enabled[init_i] = true;
        ai5D126363_wave7_lastUnits[init_i] = null;
        ai5D126363_wave7_lastWave[init_i] = null;
    }

    ai5D126363_wave7_trigger = TriggerCreate("ai5D126363_wave7_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave7_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave7_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave7_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave7_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave7_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave7_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave7_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave7_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave7_runFunc (bool c, bool a) {
    int p = ai5D126363_wave7_runPlayer;
    playergroup target = ai5D126363_wave7_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave7_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 360; }
    if (d == 2) { ta = 360; }
    if (d == 3) { ta = 360; }
    if (d == 4) { ta = 360; }
    tg = 0;
    if (d == 1) { tg = 45; }
    if (d == 2) { tg = 45; }
    if (d == 3) { tg = 45; }
    if (d == 4) { tg = 45; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(293));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(244);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(512);

    ai5D126363_wave7_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 18; }
    if (d == 2) { createCount = 18; }
    if (d == 3) { createCount = 18; }
    if (d == 4) { createCount = 26; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave7_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 7; }
    if (d == 4) { createCount = 8; }
    if (createCount > 0) {
        UnitCreate(createCount, "Hydralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave7_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 4; }
    if (d == 2) { createCount = 4; }
    if (d == 3) { createCount = 5; }
    if (d == 4) { createCount = 5; }
    if (createCount > 0) {
        UnitCreate(createCount, "InfestedAbomination", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave7_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 7; }
    if (d == 4) { createCount = 8; }
    if (createCount > 0) {
        UnitCreate(createCount, "Mutalisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave7_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 1; }
    if (d == 2) { createCount = 1; }
    if (d == 3) { createCount = 1; }
    if (d == 4) { createCount = 1; }
    if (createCount > 0) {
        UnitCreate(createCount, "Overseer", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave7_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave7_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave7_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave7_run (int p, playergroup target, bool wait) {
    ai5D126363_wave7_runPlayer = p;
    ai5D126363_wave7_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave7_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: TAL 4
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave26_enabled;
unitgroup[17] ai5D126363_wave26_lastUnits;
wave[17] ai5D126363_wave26_lastWave;
trigger ai5D126363_wave26_trigger = null;
int ai5D126363_wave26_runPlayer;
playergroup ai5D126363_wave26_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave26_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave26_enabled[init_i] = true;
        ai5D126363_wave26_lastUnits[init_i] = null;
        ai5D126363_wave26_lastWave[init_i] = null;
    }

    ai5D126363_wave26_trigger = TriggerCreate("ai5D126363_wave26_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave26_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave26_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave26_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave26_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave26_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave26_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave26_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave26_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave26_runFunc (bool c, bool a) {
    int p = ai5D126363_wave26_runPlayer;
    playergroup target = ai5D126363_wave26_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave26_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 180; }
    if (d == 2) { ta = 180; }
    if (d == 3) { ta = 180; }
    if (d == 4) { ta = 180; }
    tg = 0;
    if (d == 1) { tg = 50; }
    if (d == 2) { tg = 50; }
    if (d == 3) { tg = 50; }
    if (d == 4) { tg = 50; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(275));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(245);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);
    if ((d == 2) || (d == 3) || (d == 4)) {
        AIAttackWaveAddWaypoint(p, PointFromId(965437914), false);
    }

    createPoint = gatherPoint;
    createPoint = PointFromId(513);

    ai5D126363_wave26_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 30; }
    if (d == 2) { createCount = 30; }
    if (d == 3) { createCount = 30; }
    if (d == 4) { createCount = 30; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave26_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 16; }
    if (d == 2) { createCount = 16; }
    if (d == 3) { createCount = 16; }
    if (d == 4) { createCount = 16; }
    if (createCount > 0) {
        UnitCreate(createCount, "Hydralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave26_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 4; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Ultralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave26_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave26_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave26_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave26_run (int p, playergroup target, bool wait) {
    ai5D126363_wave26_runPlayer = p;
    ai5D126363_wave26_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave26_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: ARMADA Wave 3
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave38_enabled;
unitgroup[17] ai5D126363_wave38_lastUnits;
wave[17] ai5D126363_wave38_lastWave;
trigger ai5D126363_wave38_trigger = null;
int ai5D126363_wave38_runPlayer;
playergroup ai5D126363_wave38_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave38_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave38_enabled[init_i] = true;
        ai5D126363_wave38_lastUnits[init_i] = null;
        ai5D126363_wave38_lastWave[init_i] = null;
    }

    ai5D126363_wave38_trigger = TriggerCreate("ai5D126363_wave38_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave38_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave38_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave38_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave38_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave38_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave38_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave38_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave38_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave38_runFunc (bool c, bool a) {
    int p = ai5D126363_wave38_runPlayer;
    playergroup target = ai5D126363_wave38_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave38_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 30; }
    if (d == 2) { ta = 30; }
    if (d == 3) { ta = 30; }
    if (d == 4) { ta = 30; }
    tg = 0;
    if (d == 1) { tg = 30; }
    if (d == 2) { tg = 30; }
    if (d == 3) { tg = 30; }
    if (d == 4) { tg = 30; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack3BotMid_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(272));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(246);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(294);

    ai5D126363_wave38_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 14; }
    if (d == 2) { createCount = 14; }
    if (d == 3) { createCount = 14; }
    if (d == 4) { createCount = 14; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zealot", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave38_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 5; }
    if (d == 2) { createCount = 5; }
    if (d == 3) { createCount = 6; }
    if (d == 4) { createCount = 7; }
    if (createCount > 0) {
        UnitCreate(createCount, "Immortal", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave38_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave38_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave38_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave38_run (int p, playergroup target, bool wait) {
    ai5D126363_wave38_runPlayer = p;
    ai5D126363_wave38_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave38_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: TAL 5
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave27_enabled;
unitgroup[17] ai5D126363_wave27_lastUnits;
wave[17] ai5D126363_wave27_lastWave;
trigger ai5D126363_wave27_trigger = null;
int ai5D126363_wave27_runPlayer;
playergroup ai5D126363_wave27_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave27_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave27_enabled[init_i] = true;
        ai5D126363_wave27_lastUnits[init_i] = null;
        ai5D126363_wave27_lastWave[init_i] = null;
    }

    ai5D126363_wave27_trigger = TriggerCreate("ai5D126363_wave27_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave27_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave27_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave27_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave27_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave27_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave27_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave27_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave27_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave27_runFunc (bool c, bool a) {
    int p = ai5D126363_wave27_runPlayer;
    playergroup target = ai5D126363_wave27_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave27_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 350; }
    if (d == 2) { ta = 350; }
    if (d == 3) { ta = 350; }
    if (d == 4) { ta = 350; }
    tg = 0;
    if (d == 1) { tg = 50; }
    if (d == 2) { tg = 50; }
    if (d == 3) { tg = 50; }
    if (d == 4) { tg = 50; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(275));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(245);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);
    if ((d == 2) || (d == 3) || (d == 4)) {
        AIAttackWaveAddWaypoint(p, PointFromId(965437914), false);
    }

    createPoint = gatherPoint;
    createPoint = PointFromId(513);

    ai5D126363_wave27_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 18; }
    if (d == 2) { createCount = 18; }
    if (d == 3) { createCount = 18; }
    if (d == 4) { createCount = 18; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave27_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 9; }
    if (d == 2) { createCount = 9; }
    if (d == 3) { createCount = 12; }
    if (d == 4) { createCount = 12; }
    if (createCount > 0) {
        UnitCreate(createCount, "Roach", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave27_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 3; }
    if (createCount > 0) {
        UnitCreate(createCount, "Ultralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave27_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 9; }
    if (d == 2) { createCount = 9; }
    if (d == 3) { createCount = 9; }
    if (d == 4) { createCount = 12; }
    if (createCount > 0) {
        UnitCreate(createCount, "Mutalisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave27_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 1; }
    if (d == 2) { createCount = 1; }
    if (d == 3) { createCount = 1; }
    if (d == 4) { createCount = 1; }
    if (createCount > 0) {
        UnitCreate(createCount, "Overseer", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave27_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave27_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave27_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave27_run (int p, playergroup target, bool wait) {
    ai5D126363_wave27_runPlayer = p;
    ai5D126363_wave27_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave27_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave16_enabled;
unitgroup[17] ai5D126363_wave16_lastUnits;
wave[17] ai5D126363_wave16_lastWave;
trigger ai5D126363_wave16_trigger = null;
int ai5D126363_wave16_runPlayer;
playergroup ai5D126363_wave16_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave16_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave16_enabled[init_i] = true;
        ai5D126363_wave16_lastUnits[init_i] = null;
        ai5D126363_wave16_lastWave[init_i] = null;
    }

    ai5D126363_wave16_trigger = TriggerCreate("ai5D126363_wave16_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave16_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave16_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave16_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave16_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave16_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave16_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave16_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave16_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave16_runFunc (bool c, bool a) {
    int p = ai5D126363_wave16_runPlayer;
    playergroup target = ai5D126363_wave16_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave16_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 30; }
    if (d == 2) { ta = 30; }
    if (d == 3) { ta = 30; }
    if (d == 4) { ta = 30; }
    tg = 0;
    if (d == 1) { tg = 40; }
    if (d == 2) { tg = 40; }
    if (d == 3) { tg = 40; }
    if (d == 4) { tg = 40; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(272));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(246);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(294);

    ai5D126363_wave16_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Ultralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave16_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 9; }
    if (d == 2) { createCount = 9; }
    if (d == 3) { createCount = 9; }
    if (d == 4) { createCount = 9; }
    if (createCount > 0) {
        UnitCreate(createCount, "Hydralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave16_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 6; }
    if (d == 4) { createCount = 6; }
    if (createCount > 0) {
        UnitCreate(createCount, "Roach", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave16_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 6; }
    if (d == 4) { createCount = 6; }
    if (createCount > 0) {
        UnitCreate(createCount, "Mutalisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave16_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave16_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave16_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave16_run (int p, playergroup target, bool wait) {
    ai5D126363_wave16_runPlayer = p;
    ai5D126363_wave16_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave16_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: ARMADA Wave 4 - Q
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave39_enabled;
unitgroup[17] ai5D126363_wave39_lastUnits;
wave[17] ai5D126363_wave39_lastWave;
trigger ai5D126363_wave39_trigger = null;
int ai5D126363_wave39_runPlayer;
playergroup ai5D126363_wave39_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave39_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave39_enabled[init_i] = true;
        ai5D126363_wave39_lastUnits[init_i] = null;
        ai5D126363_wave39_lastWave[init_i] = null;
    }

    ai5D126363_wave39_trigger = TriggerCreate("ai5D126363_wave39_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave39_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave39_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave39_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave39_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave39_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave39_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave39_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave39_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave39_runFunc (bool c, bool a) {
    int p = ai5D126363_wave39_runPlayer;
    playergroup target = ai5D126363_wave39_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave39_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 180; }
    if (d == 2) { ta = 180; }
    if (d == 3) { ta = 180; }
    if (d == 4) { ta = 180; }
    tg = 0;
    if (d == 1) { tg = 40; }
    if (d == 2) { tg = 40; }
    if (d == 3) { tg = 40; }
    if (d == 4) { tg = 40; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack4Bot_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(272));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(246);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(294);

    ai5D126363_wave39_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 12; }
    if (d == 2) { createCount = 12; }
    if (d == 3) { createCount = 12; }
    if (d == 4) { createCount = 12; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zealot", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave39_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 6; }
    if (createCount > 0) {
        UnitCreate(createCount, "Sentry", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave39_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 2; }
    if (d == 4) { createCount = 2; }
    if (createCount > 0) {
        UnitCreate(createCount, "Reaver", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave39_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 3; }
    if (createCount > 0) {
        UnitCreate(createCount, "Colossus", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave39_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave39_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave39_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave39_run (int p, playergroup target, bool wait) {
    ai5D126363_wave39_runPlayer = p;
    ai5D126363_wave39_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave39_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave5_enabled;
unitgroup[17] ai5D126363_wave5_lastUnits;
wave[17] ai5D126363_wave5_lastWave;
trigger ai5D126363_wave5_trigger = null;
int ai5D126363_wave5_runPlayer;
playergroup ai5D126363_wave5_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave5_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave5_enabled[init_i] = true;
        ai5D126363_wave5_lastUnits[init_i] = null;
        ai5D126363_wave5_lastWave[init_i] = null;
    }

    ai5D126363_wave5_trigger = TriggerCreate("ai5D126363_wave5_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave5_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave5_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave5_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave5_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave5_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave5_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave5_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave5_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave5_runFunc (bool c, bool a) {
    int p = ai5D126363_wave5_runPlayer;
    playergroup target = ai5D126363_wave5_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave5_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 240; }
    if (d == 2) { ta = 240; }
    if (d == 3) { ta = 240; }
    if (d == 4) { ta = 240; }
    tg = 0;
    if (d == 1) { tg = 50; }
    if (d == 2) { tg = 50; }
    if (d == 3) { tg = 50; }
    if (d == 4) { tg = 50; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(293));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(244);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(512);

    ai5D126363_wave5_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 16; }
    if (d == 2) { createCount = 16; }
    if (d == 3) { createCount = 20; }
    if (d == 4) { createCount = 20; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave5_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 8; }
    if (d == 2) { createCount = 8; }
    if (d == 3) { createCount = 8; }
    if (d == 4) { createCount = 9; }
    if (createCount > 0) {
        UnitCreate(createCount, "Roach", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave5_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 8; }
    if (d == 2) { createCount = 8; }
    if (d == 3) { createCount = 8; }
    if (d == 4) { createCount = 9; }
    if (createCount > 0) {
        UnitCreate(createCount, "Hydralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave5_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 5; }
    if (d == 2) { createCount = 5; }
    if (d == 3) { createCount = 6; }
    if (d == 4) { createCount = 6; }
    if (createCount > 0) {
        UnitCreate(createCount, "Guardian", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave5_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 1; }
    if (d == 2) { createCount = 1; }
    if (d == 3) { createCount = 1; }
    if (d == 4) { createCount = 1; }
    if (createCount > 0) {
        UnitCreate(createCount, "Overseer", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave5_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave5_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave5_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave5_run (int p, playergroup target, bool wait) {
    ai5D126363_wave5_runPlayer = p;
    ai5D126363_wave5_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave5_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: TER 3
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave33_enabled;
unitgroup[17] ai5D126363_wave33_lastUnits;
wave[17] ai5D126363_wave33_lastWave;
trigger ai5D126363_wave33_trigger = null;
int ai5D126363_wave33_runPlayer;
playergroup ai5D126363_wave33_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave33_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave33_enabled[init_i] = true;
        ai5D126363_wave33_lastUnits[init_i] = null;
        ai5D126363_wave33_lastWave[init_i] = null;
    }

    ai5D126363_wave33_trigger = TriggerCreate("ai5D126363_wave33_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave33_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave33_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave33_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave33_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave33_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave33_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave33_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave33_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave33_runFunc (bool c, bool a) {
    int p = ai5D126363_wave33_runPlayer;
    playergroup target = ai5D126363_wave33_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave33_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 360; }
    if (d == 2) { ta = 360; }
    if (d == 3) { ta = 360; }
    if (d == 4) { ta = 360; }
    tg = 0;
    if (d == 1) { tg = 45; }
    if (d == 2) { tg = 45; }
    if (d == 3) { tg = 45; }
    if (d == 4) { tg = 45; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(1507949892));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(1865764243);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(1418082495);

    ai5D126363_wave33_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 18; }
    if (d == 2) { createCount = 18; }
    if (d == 3) { createCount = 18; }
    if (d == 4) { createCount = 26; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave33_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 7; }
    if (d == 4) { createCount = 8; }
    if (createCount > 0) {
        UnitCreate(createCount, "Hydralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave33_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 4; }
    if (d == 2) { createCount = 4; }
    if (d == 3) { createCount = 5; }
    if (d == 4) { createCount = 5; }
    if (createCount > 0) {
        UnitCreate(createCount, "InfestedAbomination", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave33_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 7; }
    if (d == 4) { createCount = 8; }
    if (createCount > 0) {
        UnitCreate(createCount, "Mutalisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave33_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 1; }
    if (d == 2) { createCount = 1; }
    if (d == 3) { createCount = 1; }
    if (d == 4) { createCount = 1; }
    if (createCount > 0) {
        UnitCreate(createCount, "Overseer", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave33_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave33_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave33_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave33_run (int p, playergroup target, bool wait) {
    ai5D126363_wave33_runPlayer = p;
    ai5D126363_wave33_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave33_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave17_enabled;
unitgroup[17] ai5D126363_wave17_lastUnits;
wave[17] ai5D126363_wave17_lastWave;
trigger ai5D126363_wave17_trigger = null;
int ai5D126363_wave17_runPlayer;
playergroup ai5D126363_wave17_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave17_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave17_enabled[init_i] = true;
        ai5D126363_wave17_lastUnits[init_i] = null;
        ai5D126363_wave17_lastWave[init_i] = null;
    }

    ai5D126363_wave17_trigger = TriggerCreate("ai5D126363_wave17_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave17_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave17_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave17_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave17_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave17_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave17_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave17_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave17_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave17_runFunc (bool c, bool a) {
    int p = ai5D126363_wave17_runPlayer;
    playergroup target = ai5D126363_wave17_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave17_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 320; }
    if (d == 2) { ta = 320; }
    if (d == 3) { ta = 320; }
    if (d == 4) { ta = 320; }
    tg = 0;
    if (d == 1) { tg = 45; }
    if (d == 2) { tg = 45; }
    if (d == 3) { tg = 45; }
    if (d == 4) { tg = 45; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(272));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(246);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(294);

    ai5D126363_wave17_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 24; }
    if (d == 2) { createCount = 24; }
    if (d == 3) { createCount = 24; }
    if (d == 4) { createCount = 24; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave17_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 4; }
    if (d == 2) { createCount = 4; }
    if (d == 3) { createCount = 6; }
    if (d == 4) { createCount = 6; }
    if (createCount > 0) {
        UnitCreate(createCount, "Baneling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave17_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 4; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "InfestedAbomination", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave17_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 5; }
    if (d == 2) { createCount = 5; }
    if (d == 3) { createCount = 5; }
    if (d == 4) { createCount = 6; }
    if (createCount > 0) {
        UnitCreate(createCount, "Guardian", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave17_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave17_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave17_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave17_run (int p, playergroup target, bool wait) {
    ai5D126363_wave17_runPlayer = p;
    ai5D126363_wave17_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave17_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: Wave 3 - Streaming Wave 3 Q
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave8_enabled;
unitgroup[17] ai5D126363_wave8_lastUnits;
wave[17] ai5D126363_wave8_lastWave;
trigger ai5D126363_wave8_trigger = null;
int ai5D126363_wave8_runPlayer;
playergroup ai5D126363_wave8_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave8_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave8_enabled[init_i] = true;
        ai5D126363_wave8_lastUnits[init_i] = null;
        ai5D126363_wave8_lastWave[init_i] = null;
    }

    ai5D126363_wave8_trigger = TriggerCreate("ai5D126363_wave8_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave8_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave8_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave8_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave8_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave8_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave8_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave8_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave8_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave8_runFunc (bool c, bool a) {
    int p = ai5D126363_wave8_runPlayer;
    playergroup target = ai5D126363_wave8_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave8_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 40; }
    if (d == 2) { ta = 40; }
    if (d == 3) { ta = 40; }
    if (d == 4) { ta = 40; }
    tg = 0;
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;

    ai5D126363_wave8_lastUnits[p] = UnitGroupEmpty();

    Wait(ts, c_timeAI);
    TriggerExecute(TriggerFind("gt_StreamingWave03NER_Func"), true, false);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave8_run (int p, playergroup target, bool wait) {
    ai5D126363_wave8_runPlayer = p;
    ai5D126363_wave8_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave8_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: Wave 5 - Streaming Wave 5
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave18_enabled;
unitgroup[17] ai5D126363_wave18_lastUnits;
wave[17] ai5D126363_wave18_lastWave;
trigger ai5D126363_wave18_trigger = null;
int ai5D126363_wave18_runPlayer;
playergroup ai5D126363_wave18_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave18_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave18_enabled[init_i] = true;
        ai5D126363_wave18_lastUnits[init_i] = null;
        ai5D126363_wave18_lastWave[init_i] = null;
    }

    ai5D126363_wave18_trigger = TriggerCreate("ai5D126363_wave18_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave18_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave18_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave18_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave18_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave18_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave18_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave18_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave18_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave18_runFunc (bool c, bool a) {
    int p = ai5D126363_wave18_runPlayer;
    playergroup target = ai5D126363_wave18_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave18_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 60; }
    if (d == 2) { ta = 60; }
    if (d == 3) { ta = 60; }
    if (d == 4) { ta = 60; }
    tg = 0;
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;

    ai5D126363_wave18_lastUnits[p] = UnitGroupEmpty();

    Wait(ts, c_timeAI);
    TriggerExecute(TriggerFind("gt_StreamingWave04PUR_Func"), true, false);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave18_run (int p, playergroup target, bool wait) {
    ai5D126363_wave18_runPlayer = p;
    ai5D126363_wave18_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave18_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave1_enabled;
unitgroup[17] ai5D126363_wave1_lastUnits;
wave[17] ai5D126363_wave1_lastWave;
trigger ai5D126363_wave1_trigger = null;
int ai5D126363_wave1_runPlayer;
playergroup ai5D126363_wave1_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave1_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave1_enabled[init_i] = true;
        ai5D126363_wave1_lastUnits[init_i] = null;
        ai5D126363_wave1_lastWave[init_i] = null;
    }

    ai5D126363_wave1_trigger = TriggerCreate("ai5D126363_wave1_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave1_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave1_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave1_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave1_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave1_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave1_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave1_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave1_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave1_runFunc (bool c, bool a) {
    int p = ai5D126363_wave1_runPlayer;
    playergroup target = ai5D126363_wave1_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave1_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 90; }
    if (d == 2) { ta = 90; }
    if (d == 3) { ta = 90; }
    if (d == 4) { ta = 90; }
    tg = 0;
    if (d == 1) { tg = 45; }
    if (d == 2) { tg = 45; }
    if (d == 3) { tg = 45; }
    if (d == 4) { tg = 45; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(293));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(244);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(512);

    ai5D126363_wave1_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 20; }
    if (d == 2) { createCount = 20; }
    if (d == 3) { createCount = 24; }
    if (d == 4) { createCount = 24; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave1_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 8; }
    if (d == 4) { createCount = 8; }
    if (createCount > 0) {
        UnitCreate(createCount, "InfestedAbomination", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave1_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 9; }
    if (d == 2) { createCount = 9; }
    if (d == 3) { createCount = 9; }
    if (d == 4) { createCount = 12; }
    if (createCount > 0) {
        UnitCreate(createCount, "Mutalisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave1_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 1; }
    if (d == 2) { createCount = 1; }
    if (d == 3) { createCount = 2; }
    if (d == 4) { createCount = 2; }
    if (createCount > 0) {
        UnitCreate(createCount, "Overseer", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave1_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave1_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave1_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave1_run (int p, playergroup target, bool wait) {
    ai5D126363_wave1_runPlayer = p;
    ai5D126363_wave1_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave1_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: ARMADA Wave 5
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave40_enabled;
unitgroup[17] ai5D126363_wave40_lastUnits;
wave[17] ai5D126363_wave40_lastWave;
trigger ai5D126363_wave40_trigger = null;
int ai5D126363_wave40_runPlayer;
playergroup ai5D126363_wave40_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave40_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave40_enabled[init_i] = true;
        ai5D126363_wave40_lastUnits[init_i] = null;
        ai5D126363_wave40_lastWave[init_i] = null;
    }

    ai5D126363_wave40_trigger = TriggerCreate("ai5D126363_wave40_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave40_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave40_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave40_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave40_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave40_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave40_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave40_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave40_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave40_runFunc (bool c, bool a) {
    int p = ai5D126363_wave40_runPlayer;
    playergroup target = ai5D126363_wave40_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave40_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 30; }
    if (d == 2) { ta = 30; }
    if (d == 3) { ta = 30; }
    if (d == 4) { ta = 30; }
    tg = 0;
    if (d == 1) { tg = 30; }
    if (d == 2) { tg = 30; }
    if (d == 3) { tg = 30; }
    if (d == 4) { tg = 30; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack5Mid_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(275));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(245);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(513);

    ai5D126363_wave40_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 20; }
    if (d == 2) { createCount = 20; }
    if (d == 3) { createCount = 20; }
    if (d == 4) { createCount = 20; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zealot", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave40_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 8; }
    if (d == 2) { createCount = 8; }
    if (d == 3) { createCount = 10; }
    if (d == 4) { createCount = 10; }
    if (createCount > 0) {
        UnitCreate(createCount, "Dragoon", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave40_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 2; }
    if (d == 4) { createCount = 3; }
    if (createCount > 0) {
        UnitCreate(createCount, "Colossus", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave40_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave40_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave40_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave40_run (int p, playergroup target, bool wait) {
    ai5D126363_wave40_runPlayer = p;
    ai5D126363_wave40_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave40_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: TAL 8
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave29_enabled;
unitgroup[17] ai5D126363_wave29_lastUnits;
wave[17] ai5D126363_wave29_lastWave;
trigger ai5D126363_wave29_trigger = null;
int ai5D126363_wave29_runPlayer;
playergroup ai5D126363_wave29_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave29_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave29_enabled[init_i] = true;
        ai5D126363_wave29_lastUnits[init_i] = null;
        ai5D126363_wave29_lastWave[init_i] = null;
    }

    ai5D126363_wave29_trigger = TriggerCreate("ai5D126363_wave29_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave29_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave29_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave29_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave29_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave29_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave29_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave29_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave29_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave29_runFunc (bool c, bool a) {
    int p = ai5D126363_wave29_runPlayer;
    playergroup target = ai5D126363_wave29_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave29_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 200; }
    if (d == 2) { ta = 200; }
    if (d == 3) { ta = 200; }
    if (d == 4) { ta = 200; }
    tg = 0;
    if (d == 1) { tg = 45; }
    if (d == 2) { tg = 45; }
    if (d == 3) { tg = 45; }
    if (d == 4) { tg = 45; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(275));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(245);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);
    if ((d == 2) || (d == 3) || (d == 4)) {
        AIAttackWaveAddWaypoint(p, PointFromId(965437914), false);
    }

    createPoint = gatherPoint;
    createPoint = PointFromId(513);

    ai5D126363_wave29_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 18; }
    if (d == 2) { createCount = 18; }
    if (d == 3) { createCount = 18; }
    if (d == 4) { createCount = 18; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave29_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 4; }
    if (d == 2) { createCount = 4; }
    if (d == 3) { createCount = 5; }
    if (d == 4) { createCount = 6; }
    if (createCount > 0) {
        UnitCreate(createCount, "InfestedAbomination", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave29_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 4; }
    if (d == 2) { createCount = 4; }
    if (d == 3) { createCount = 5; }
    if (d == 4) { createCount = 6; }
    if (createCount > 0) {
        UnitCreate(createCount, "Guardian", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave29_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 8; }
    if (d == 4) { createCount = 8; }
    if (createCount > 0) {
        UnitCreate(createCount, "Mutalisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave29_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave29_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave29_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave29_run (int p, playergroup target, bool wait) {
    ai5D126363_wave29_runPlayer = p;
    ai5D126363_wave29_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave29_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: ARMADA Wave 6 - Q
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave41_enabled;
unitgroup[17] ai5D126363_wave41_lastUnits;
wave[17] ai5D126363_wave41_lastWave;
trigger ai5D126363_wave41_trigger = null;
int ai5D126363_wave41_runPlayer;
playergroup ai5D126363_wave41_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave41_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave41_enabled[init_i] = true;
        ai5D126363_wave41_lastUnits[init_i] = null;
        ai5D126363_wave41_lastWave[init_i] = null;
    }

    ai5D126363_wave41_trigger = TriggerCreate("ai5D126363_wave41_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave41_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave41_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave41_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave41_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave41_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave41_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave41_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave41_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave41_runFunc (bool c, bool a) {
    int p = ai5D126363_wave41_runPlayer;
    playergroup target = ai5D126363_wave41_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave41_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 270; }
    if (d == 2) { ta = 270; }
    if (d == 3) { ta = 270; }
    if (d == 4) { ta = 270; }
    tg = 0;
    if (d == 1) { tg = 45; }
    if (d == 2) { tg = 45; }
    if (d == 3) { tg = 45; }
    if (d == 4) { tg = 45; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack6BotMid_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(272));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(246);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(294);

    ai5D126363_wave41_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 14; }
    if (d == 2) { createCount = 14; }
    if (d == 3) { createCount = 14; }
    if (d == 4) { createCount = 14; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zealot", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave41_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 8; }
    if (d == 2) { createCount = 8; }
    if (d == 3) { createCount = 10; }
    if (d == 4) { createCount = 10; }
    if (createCount > 0) {
        UnitCreate(createCount, "Dragoon", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave41_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Reaver", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave41_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave41_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave41_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave41_run (int p, playergroup target, bool wait) {
    ai5D126363_wave41_runPlayer = p;
    ai5D126363_wave41_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave41_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave19_enabled;
unitgroup[17] ai5D126363_wave19_lastUnits;
wave[17] ai5D126363_wave19_lastWave;
trigger ai5D126363_wave19_trigger = null;
int ai5D126363_wave19_runPlayer;
playergroup ai5D126363_wave19_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave19_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave19_enabled[init_i] = true;
        ai5D126363_wave19_lastUnits[init_i] = null;
        ai5D126363_wave19_lastWave[init_i] = null;
    }

    ai5D126363_wave19_trigger = TriggerCreate("ai5D126363_wave19_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave19_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave19_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave19_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave19_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave19_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave19_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave19_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave19_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave19_runFunc (bool c, bool a) {
    int p = ai5D126363_wave19_runPlayer;
    playergroup target = ai5D126363_wave19_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave19_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 270; }
    if (d == 2) { ta = 270; }
    if (d == 3) { ta = 270; }
    if (d == 4) { ta = 270; }
    tg = 0;
    if (d == 1) { tg = 50; }
    if (d == 2) { tg = 50; }
    if (d == 3) { tg = 50; }
    if (d == 4) { tg = 50; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(272));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(246);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(294);

    ai5D126363_wave19_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 18; }
    if (d == 2) { createCount = 18; }
    if (d == 3) { createCount = 18; }
    if (d == 4) { createCount = 24; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave19_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 8; }
    if (d == 2) { createCount = 8; }
    if (d == 3) { createCount = 8; }
    if (d == 4) { createCount = 12; }
    if (createCount > 0) {
        UnitCreate(createCount, "Roach", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave19_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 4; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Guardian", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave19_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 8; }
    if (d == 4) { createCount = 8; }
    if (createCount > 0) {
        UnitCreate(createCount, "Mutalisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave19_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 1; }
    if (d == 2) { createCount = 1; }
    if (d == 3) { createCount = 1; }
    if (d == 4) { createCount = 1; }
    if (createCount > 0) {
        UnitCreate(createCount, "Overseer", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave19_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave19_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave19_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave19_run (int p, playergroup target, bool wait) {
    ai5D126363_wave19_runPlayer = p;
    ai5D126363_wave19_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave19_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: TER 5
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave35_enabled;
unitgroup[17] ai5D126363_wave35_lastUnits;
wave[17] ai5D126363_wave35_lastWave;
trigger ai5D126363_wave35_trigger = null;
int ai5D126363_wave35_runPlayer;
playergroup ai5D126363_wave35_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave35_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave35_enabled[init_i] = true;
        ai5D126363_wave35_lastUnits[init_i] = null;
        ai5D126363_wave35_lastWave[init_i] = null;
    }

    ai5D126363_wave35_trigger = TriggerCreate("ai5D126363_wave35_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave35_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave35_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave35_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave35_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave35_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave35_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave35_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave35_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave35_runFunc (bool c, bool a) {
    int p = ai5D126363_wave35_runPlayer;
    playergroup target = ai5D126363_wave35_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave35_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 270; }
    if (d == 2) { ta = 270; }
    if (d == 3) { ta = 270; }
    if (d == 4) { ta = 270; }
    tg = 0;
    if (d == 1) { tg = 50; }
    if (d == 2) { tg = 50; }
    if (d == 3) { tg = 50; }
    if (d == 4) { tg = 50; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(1507949892));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(1865764243);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(1418082495);

    ai5D126363_wave35_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 18; }
    if (d == 2) { createCount = 18; }
    if (d == 3) { createCount = 18; }
    if (d == 4) { createCount = 24; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave35_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 8; }
    if (d == 2) { createCount = 8; }
    if (d == 3) { createCount = 8; }
    if (d == 4) { createCount = 12; }
    if (createCount > 0) {
        UnitCreate(createCount, "Roach", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave35_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 4; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Guardian", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave35_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 8; }
    if (d == 4) { createCount = 8; }
    if (createCount > 0) {
        UnitCreate(createCount, "Mutalisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave35_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 1; }
    if (d == 2) { createCount = 1; }
    if (d == 3) { createCount = 1; }
    if (d == 4) { createCount = 1; }
    if (createCount > 0) {
        UnitCreate(createCount, "Overseer", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave35_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave35_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave35_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave35_run (int p, playergroup target, bool wait) {
    ai5D126363_wave35_runPlayer = p;
    ai5D126363_wave35_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave35_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: TER 4
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave34_enabled;
unitgroup[17] ai5D126363_wave34_lastUnits;
wave[17] ai5D126363_wave34_lastWave;
trigger ai5D126363_wave34_trigger = null;
int ai5D126363_wave34_runPlayer;
playergroup ai5D126363_wave34_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave34_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave34_enabled[init_i] = true;
        ai5D126363_wave34_lastUnits[init_i] = null;
        ai5D126363_wave34_lastWave[init_i] = null;
    }

    ai5D126363_wave34_trigger = TriggerCreate("ai5D126363_wave34_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave34_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave34_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave34_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave34_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave34_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave34_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave34_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave34_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave34_runFunc (bool c, bool a) {
    int p = ai5D126363_wave34_runPlayer;
    playergroup target = ai5D126363_wave34_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave34_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 175; }
    if (d == 2) { ta = 175; }
    if (d == 3) { ta = 175; }
    if (d == 4) { ta = 175; }
    tg = 0;
    if (d == 1) { tg = 45; }
    if (d == 2) { tg = 45; }
    if (d == 3) { tg = 45; }
    if (d == 4) { tg = 45; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(1507949892));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(1865764243);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(1418082495);

    ai5D126363_wave34_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Ultralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave34_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 8; }
    if (d == 2) { createCount = 8; }
    if (d == 3) { createCount = 10; }
    if (d == 4) { createCount = 10; }
    if (createCount > 0) {
        UnitCreate(createCount, "Hydralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave34_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 8; }
    if (d == 2) { createCount = 8; }
    if (d == 3) { createCount = 10; }
    if (d == 4) { createCount = 10; }
    if (createCount > 0) {
        UnitCreate(createCount, "Mutalisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave34_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 1; }
    if (d == 2) { createCount = 1; }
    if (d == 3) { createCount = 1; }
    if (d == 4) { createCount = 2; }
    if (createCount > 0) {
        UnitCreate(createCount, "Overseer", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave34_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave34_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave34_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave34_run (int p, playergroup target, bool wait) {
    ai5D126363_wave34_runPlayer = p;
    ai5D126363_wave34_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave34_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: TAL 7 - Streaming Wave 7
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave28_enabled;
unitgroup[17] ai5D126363_wave28_lastUnits;
wave[17] ai5D126363_wave28_lastWave;
trigger ai5D126363_wave28_trigger = null;
int ai5D126363_wave28_runPlayer;
playergroup ai5D126363_wave28_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave28_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave28_enabled[init_i] = true;
        ai5D126363_wave28_lastUnits[init_i] = null;
        ai5D126363_wave28_lastWave[init_i] = null;
    }

    ai5D126363_wave28_trigger = TriggerCreate("ai5D126363_wave28_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave28_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave28_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave28_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave28_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave28_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave28_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave28_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave28_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave28_runFunc (bool c, bool a) {
    int p = ai5D126363_wave28_runPlayer;
    playergroup target = ai5D126363_wave28_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave28_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 50; }
    if (d == 2) { ta = 50; }
    if (d == 3) { ta = 50; }
    if (d == 4) { ta = 50; }
    tg = 0;
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;

    ai5D126363_wave28_lastUnits[p] = UnitGroupEmpty();

    Wait(ts, c_timeAI);
    TriggerExecute(TriggerFind("gt_StreamingWave07TAL_Func"), true, false);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave28_run (int p, playergroup target, bool wait) {
    ai5D126363_wave28_runPlayer = p;
    ai5D126363_wave28_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave28_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: ARMADA Wave 7
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave42_enabled;
unitgroup[17] ai5D126363_wave42_lastUnits;
wave[17] ai5D126363_wave42_lastWave;
trigger ai5D126363_wave42_trigger = null;
int ai5D126363_wave42_runPlayer;
playergroup ai5D126363_wave42_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave42_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave42_enabled[init_i] = true;
        ai5D126363_wave42_lastUnits[init_i] = null;
        ai5D126363_wave42_lastWave[init_i] = null;
    }

    ai5D126363_wave42_trigger = TriggerCreate("ai5D126363_wave42_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave42_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave42_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave42_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave42_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave42_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave42_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave42_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave42_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave42_runFunc (bool c, bool a) {
    int p = ai5D126363_wave42_runPlayer;
    playergroup target = ai5D126363_wave42_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave42_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 30; }
    if (d == 2) { ta = 30; }
    if (d == 3) { ta = 30; }
    if (d == 4) { ta = 30; }
    tg = 0;
    if (d == 1) { tg = 30; }
    if (d == 2) { tg = 30; }
    if (d == 3) { tg = 30; }
    if (d == 4) { tg = 30; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack7Mid_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(275));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(245);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(513);

    ai5D126363_wave42_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 6; }
    if (d == 4) { createCount = 6; }
    if (createCount > 0) {
        UnitCreate(createCount, "Immortal", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave42_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Colossus", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave42_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 3; }
    if (createCount > 0) {
        UnitCreate(createCount, "Archon", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave42_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave42_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave42_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave42_run (int p, playergroup target, bool wait) {
    ai5D126363_wave42_runPlayer = p;
    ai5D126363_wave42_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave42_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: Wave 5 - Streaming Wave 6
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave64_enabled;
unitgroup[17] ai5D126363_wave64_lastUnits;
wave[17] ai5D126363_wave64_lastWave;
trigger ai5D126363_wave64_trigger = null;
int ai5D126363_wave64_runPlayer;
playergroup ai5D126363_wave64_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave64_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave64_enabled[init_i] = true;
        ai5D126363_wave64_lastUnits[init_i] = null;
        ai5D126363_wave64_lastWave[init_i] = null;
    }

    ai5D126363_wave64_trigger = TriggerCreate("ai5D126363_wave64_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave64_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave64_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave64_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave64_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave64_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave64_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave64_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave64_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave64_runFunc (bool c, bool a) {
    int p = ai5D126363_wave64_runPlayer;
    playergroup target = ai5D126363_wave64_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave64_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 260; }
    if (d == 2) { ta = 260; }
    if (d == 3) { ta = 260; }
    if (d == 4) { ta = 260; }
    tg = 0;
    if (d == 2) { tg = 45; }
    if (d == 3) { tg = 45; }
    if (d == 4) { tg = 60; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;

    ai5D126363_wave64_lastUnits[p] = UnitGroupEmpty();

    Wait(ts, c_timeAI);
    TriggerExecute(TriggerFind("gt_StreamingWave06NER_Func"), true, false);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave64_run (int p, playergroup target, bool wait) {
    ai5D126363_wave64_runPlayer = p;
    ai5D126363_wave64_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave64_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: ARMADA Wave 8 - Q
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave43_enabled;
unitgroup[17] ai5D126363_wave43_lastUnits;
wave[17] ai5D126363_wave43_lastWave;
trigger ai5D126363_wave43_trigger = null;
int ai5D126363_wave43_runPlayer;
playergroup ai5D126363_wave43_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave43_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave43_enabled[init_i] = true;
        ai5D126363_wave43_lastUnits[init_i] = null;
        ai5D126363_wave43_lastWave[init_i] = null;
    }

    ai5D126363_wave43_trigger = TriggerCreate("ai5D126363_wave43_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave43_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave43_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave43_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave43_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave43_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave43_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave43_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave43_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave43_runFunc (bool c, bool a) {
    int p = ai5D126363_wave43_runPlayer;
    playergroup target = ai5D126363_wave43_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave43_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 30; }
    if (d == 2) { ta = 30; }
    if (d == 3) { ta = 30; }
    if (d == 4) { ta = 30; }
    tg = 0;
    if (d == 1) { tg = 30; }
    if (d == 2) { tg = 30; }
    if (d == 3) { tg = 30; }
    if (d == 4) { tg = 30; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack8TopMid_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(293));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(244);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(512);

    ai5D126363_wave43_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 18; }
    if (d == 2) { createCount = 18; }
    if (d == 3) { createCount = 18; }
    if (d == 4) { createCount = 18; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zealot", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave43_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 4; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Immortal", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave43_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Reaver", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave43_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave43_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave43_lastWave[p];
    Wait(ts, c_timeAI);
    TriggerExecute(TriggerFind("gt_AmonTransmission3_Func"), true, false);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave43_run (int p, playergroup target, bool wait) {
    ai5D126363_wave43_runPlayer = p;
    ai5D126363_wave43_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave43_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: Wave 6 - Streaming Wave 5 Q
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave20_enabled;
unitgroup[17] ai5D126363_wave20_lastUnits;
wave[17] ai5D126363_wave20_lastWave;
trigger ai5D126363_wave20_trigger = null;
int ai5D126363_wave20_runPlayer;
playergroup ai5D126363_wave20_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave20_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave20_enabled[init_i] = true;
        ai5D126363_wave20_lastUnits[init_i] = null;
        ai5D126363_wave20_lastWave[init_i] = null;
    }

    ai5D126363_wave20_trigger = TriggerCreate("ai5D126363_wave20_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave20_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave20_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave20_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave20_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave20_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave20_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave20_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave20_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave20_runFunc (bool c, bool a) {
    int p = ai5D126363_wave20_runPlayer;
    playergroup target = ai5D126363_wave20_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave20_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 70; }
    if (d == 2) { ta = 70; }
    if (d == 3) { ta = 70; }
    if (d == 4) { ta = 70; }
    tg = 0;
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;

    ai5D126363_wave20_lastUnits[p] = UnitGroupEmpty();

    Wait(ts, c_timeAI);
    TriggerExecute(TriggerFind("gt_StreamingWave05PUR_Func"), true, false);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave20_run (int p, playergroup target, bool wait) {
    ai5D126363_wave20_runPlayer = p;
    ai5D126363_wave20_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave20_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: ARMADA Wave 9 - Q
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave44_enabled;
unitgroup[17] ai5D126363_wave44_lastUnits;
wave[17] ai5D126363_wave44_lastWave;
trigger ai5D126363_wave44_trigger = null;
int ai5D126363_wave44_runPlayer;
playergroup ai5D126363_wave44_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave44_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave44_enabled[init_i] = true;
        ai5D126363_wave44_lastUnits[init_i] = null;
        ai5D126363_wave44_lastWave[init_i] = null;
    }

    ai5D126363_wave44_trigger = TriggerCreate("ai5D126363_wave44_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave44_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave44_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave44_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave44_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave44_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave44_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave44_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave44_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave44_runFunc (bool c, bool a) {
    int p = ai5D126363_wave44_runPlayer;
    playergroup target = ai5D126363_wave44_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave44_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 300; }
    if (d == 2) { ta = 300; }
    if (d == 3) { ta = 300; }
    if (d == 4) { ta = 300; }
    tg = 0;
    if (d == 1) { tg = 45; }
    if (d == 2) { tg = 45; }
    if (d == 3) { tg = 45; }
    if (d == 4) { tg = 45; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack9Top_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(293));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(244);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(512);

    ai5D126363_wave44_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 12; }
    if (d == 2) { createCount = 12; }
    if (d == 3) { createCount = 12; }
    if (d == 4) { createCount = 12; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zealot", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave44_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 7; }
    if (d == 4) { createCount = 9; }
    if (createCount > 0) {
        UnitCreate(createCount, "Dragoon", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave44_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 1; }
    if (d == 2) { createCount = 1; }
    if (d == 3) { createCount = 2; }
    if (d == 4) { createCount = 3; }
    if (createCount > 0) {
        UnitCreate(createCount, "Reaver", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave44_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave44_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave44_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave44_run (int p, playergroup target, bool wait) {
    ai5D126363_wave44_runPlayer = p;
    ai5D126363_wave44_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave44_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: Wave 5 - Streaming Wave 4
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave9_enabled;
unitgroup[17] ai5D126363_wave9_lastUnits;
wave[17] ai5D126363_wave9_lastWave;
trigger ai5D126363_wave9_trigger = null;
int ai5D126363_wave9_runPlayer;
playergroup ai5D126363_wave9_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave9_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave9_enabled[init_i] = true;
        ai5D126363_wave9_lastUnits[init_i] = null;
        ai5D126363_wave9_lastWave[init_i] = null;
    }

    ai5D126363_wave9_trigger = TriggerCreate("ai5D126363_wave9_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave9_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave9_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave9_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave9_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave9_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave9_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave9_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave9_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave9_runFunc (bool c, bool a) {
    int p = ai5D126363_wave9_runPlayer;
    playergroup target = ai5D126363_wave9_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave9_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 60; }
    if (d == 2) { ta = 60; }
    if (d == 3) { ta = 60; }
    if (d == 4) { ta = 60; }
    tg = 0;
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;

    ai5D126363_wave9_lastUnits[p] = UnitGroupEmpty();

    Wait(ts, c_timeAI);
    TriggerExecute(TriggerFind("gt_StreamingWave04PUR_Func"), true, false);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave9_run (int p, playergroup target, bool wait) {
    ai5D126363_wave9_runPlayer = p;
    ai5D126363_wave9_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave9_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave3_enabled;
unitgroup[17] ai5D126363_wave3_lastUnits;
wave[17] ai5D126363_wave3_lastWave;
trigger ai5D126363_wave3_trigger = null;
int ai5D126363_wave3_runPlayer;
playergroup ai5D126363_wave3_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave3_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave3_enabled[init_i] = true;
        ai5D126363_wave3_lastUnits[init_i] = null;
        ai5D126363_wave3_lastWave[init_i] = null;
    }

    ai5D126363_wave3_trigger = TriggerCreate("ai5D126363_wave3_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave3_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave3_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave3_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave3_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave3_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave3_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave3_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave3_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave3_runFunc (bool c, bool a) {
    int p = ai5D126363_wave3_runPlayer;
    playergroup target = ai5D126363_wave3_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave3_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 110; }
    if (d == 2) { ta = 110; }
    if (d == 3) { ta = 110; }
    if (d == 4) { ta = 110; }
    tg = 0;
    if (d == 1) { tg = 45; }
    if (d == 2) { tg = 45; }
    if (d == 3) { tg = 45; }
    if (d == 4) { tg = 45; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(293));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(244);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(512);

    ai5D126363_wave3_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Ultralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave3_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 8; }
    if (d == 2) { createCount = 8; }
    if (d == 3) { createCount = 10; }
    if (d == 4) { createCount = 10; }
    if (createCount > 0) {
        UnitCreate(createCount, "Hydralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave3_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 8; }
    if (d == 2) { createCount = 8; }
    if (d == 3) { createCount = 10; }
    if (d == 4) { createCount = 10; }
    if (createCount > 0) {
        UnitCreate(createCount, "Mutalisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave3_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 1; }
    if (d == 2) { createCount = 1; }
    if (d == 3) { createCount = 1; }
    if (d == 4) { createCount = 2; }
    if (createCount > 0) {
        UnitCreate(createCount, "Overseer", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave3_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave3_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave3_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave3_run (int p, playergroup target, bool wait) {
    ai5D126363_wave3_runPlayer = p;
    ai5D126363_wave3_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave3_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave21_enabled;
unitgroup[17] ai5D126363_wave21_lastUnits;
wave[17] ai5D126363_wave21_lastWave;
trigger ai5D126363_wave21_trigger = null;
int ai5D126363_wave21_runPlayer;
playergroup ai5D126363_wave21_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave21_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave21_enabled[init_i] = true;
        ai5D126363_wave21_lastUnits[init_i] = null;
        ai5D126363_wave21_lastWave[init_i] = null;
    }

    ai5D126363_wave21_trigger = TriggerCreate("ai5D126363_wave21_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave21_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave21_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave21_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave21_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave21_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave21_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave21_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave21_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave21_runFunc (bool c, bool a) {
    int p = ai5D126363_wave21_runPlayer;
    playergroup target = ai5D126363_wave21_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave21_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 120; }
    if (d == 2) { ta = 120; }
    if (d == 3) { ta = 120; }
    if (d == 4) { ta = 120; }
    tg = 0;
    if (d == 1) { tg = 45; }
    if (d == 2) { tg = 45; }
    if (d == 3) { tg = 45; }
    if (d == 4) { tg = 45; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(272));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(246);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(294);

    ai5D126363_wave21_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 32; }
    if (d == 2) { createCount = 32; }
    if (d == 3) { createCount = 32; }
    if (d == 4) { createCount = 32; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave21_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 12; }
    if (d == 2) { createCount = 12; }
    if (d == 3) { createCount = 12; }
    if (d == 4) { createCount = 12; }
    if (createCount > 0) {
        UnitCreate(createCount, "Hydralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave21_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 6; }
    if (d == 4) { createCount = 8; }
    if (createCount > 0) {
        UnitCreate(createCount, "InfestedAbomination", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave21_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave21_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave21_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave21_run (int p, playergroup target, bool wait) {
    ai5D126363_wave21_runPlayer = p;
    ai5D126363_wave21_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave21_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: ARMADA Wave 10
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave45_enabled;
unitgroup[17] ai5D126363_wave45_lastUnits;
wave[17] ai5D126363_wave45_lastWave;
trigger ai5D126363_wave45_trigger = null;
int ai5D126363_wave45_runPlayer;
playergroup ai5D126363_wave45_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave45_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave45_enabled[init_i] = true;
        ai5D126363_wave45_lastUnits[init_i] = null;
        ai5D126363_wave45_lastWave[init_i] = null;
    }

    ai5D126363_wave45_trigger = TriggerCreate("ai5D126363_wave45_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave45_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave45_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave45_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave45_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave45_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave45_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave45_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave45_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave45_runFunc (bool c, bool a) {
    int p = ai5D126363_wave45_runPlayer;
    playergroup target = ai5D126363_wave45_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave45_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 30; }
    if (d == 2) { ta = 30; }
    if (d == 3) { ta = 30; }
    if (d == 4) { ta = 30; }
    tg = 0;
    if (d == 1) { tg = 30; }
    if (d == 2) { tg = 30; }
    if (d == 3) { tg = 30; }
    if (d == 4) { tg = 30; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack10Mid_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(275));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(245);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(513);

    ai5D126363_wave45_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 10; }
    if (d == 2) { createCount = 10; }
    if (d == 3) { createCount = 10; }
    if (d == 4) { createCount = 10; }
    if (createCount > 0) {
        UnitCreate(createCount, "Dragoon", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave45_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 3; }
    if (createCount > 0) {
        UnitCreate(createCount, "Immortal", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave45_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 3; }
    if (createCount > 0) {
        UnitCreate(createCount, "Colossus", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave45_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 2; }
    if (d == 4) { createCount = 3; }
    if (createCount > 0) {
        UnitCreate(createCount, "Reaver", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave45_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave45_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave45_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave45_run (int p, playergroup target, bool wait) {
    ai5D126363_wave45_runPlayer = p;
    ai5D126363_wave45_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave45_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: TAL 9
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave30_enabled;
unitgroup[17] ai5D126363_wave30_lastUnits;
wave[17] ai5D126363_wave30_lastWave;
trigger ai5D126363_wave30_trigger = null;
int ai5D126363_wave30_runPlayer;
playergroup ai5D126363_wave30_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave30_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave30_enabled[init_i] = true;
        ai5D126363_wave30_lastUnits[init_i] = null;
        ai5D126363_wave30_lastWave[init_i] = null;
    }

    ai5D126363_wave30_trigger = TriggerCreate("ai5D126363_wave30_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave30_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave30_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave30_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave30_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave30_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave30_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave30_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave30_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave30_runFunc (bool c, bool a) {
    int p = ai5D126363_wave30_runPlayer;
    playergroup target = ai5D126363_wave30_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave30_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 60; }
    if (d == 2) { ta = 60; }
    if (d == 3) { ta = 60; }
    if (d == 4) { ta = 60; }
    tg = 0;
    if (d == 1) { tg = 45; }
    if (d == 2) { tg = 45; }
    if (d == 3) { tg = 45; }
    if (d == 4) { tg = 45; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(275));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(245);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);
    if ((d == 2) || (d == 3) || (d == 4)) {
        AIAttackWaveAddWaypoint(p, PointFromId(965437914), false);
    }

    createPoint = gatherPoint;
    createPoint = PointFromId(513);

    ai5D126363_wave30_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 24; }
    if (d == 2) { createCount = 24; }
    if (d == 3) { createCount = 24; }
    if (d == 4) { createCount = 24; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave30_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 4; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Ultralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave30_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 7; }
    if (d == 2) { createCount = 7; }
    if (d == 3) { createCount = 7; }
    if (d == 4) { createCount = 9; }
    if (createCount > 0) {
        UnitCreate(createCount, "Hydralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave30_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 7; }
    if (d == 2) { createCount = 7; }
    if (d == 3) { createCount = 7; }
    if (d == 4) { createCount = 9; }
    if (createCount > 0) {
        UnitCreate(createCount, "Roach", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave30_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 1; }
    if (d == 2) { createCount = 1; }
    if (d == 3) { createCount = 1; }
    if (d == 4) { createCount = 1; }
    if (createCount > 0) {
        UnitCreate(createCount, "Overseer", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave30_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave30_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave30_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave30_run (int p, playergroup target, bool wait) {
    ai5D126363_wave30_runPlayer = p;
    ai5D126363_wave30_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave30_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: ARMADA Wave 11 - Streaming Wave 8 Q
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave46_enabled;
unitgroup[17] ai5D126363_wave46_lastUnits;
wave[17] ai5D126363_wave46_lastWave;
trigger ai5D126363_wave46_trigger = null;
int ai5D126363_wave46_runPlayer;
playergroup ai5D126363_wave46_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave46_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave46_enabled[init_i] = true;
        ai5D126363_wave46_lastUnits[init_i] = null;
        ai5D126363_wave46_lastWave[init_i] = null;
    }

    ai5D126363_wave46_trigger = TriggerCreate("ai5D126363_wave46_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave46_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave46_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave46_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave46_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave46_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave46_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave46_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave46_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave46_runFunc (bool c, bool a) {
    int p = ai5D126363_wave46_runPlayer;
    playergroup target = ai5D126363_wave46_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave46_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 180; }
    if (d == 2) { ta = 180; }
    if (d == 3) { ta = 180; }
    if (d == 4) { ta = 180; }
    tg = 0;
    if (d == 1) { tg = 40; }
    if (d == 2) { tg = 40; }
    if (d == 3) { tg = 40; }
    if (d == 4) { tg = 40; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack11Top_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;

    ai5D126363_wave46_lastUnits[p] = UnitGroupEmpty();

    Wait(ts, c_timeAI);
    TriggerExecute(TriggerFind("gt_StreamingWave08NER_Func"), true, false);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave46_run (int p, playergroup target, bool wait) {
    ai5D126363_wave46_runPlayer = p;
    ai5D126363_wave46_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave46_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: TER 6
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave36_enabled;
unitgroup[17] ai5D126363_wave36_lastUnits;
wave[17] ai5D126363_wave36_lastWave;
trigger ai5D126363_wave36_trigger = null;
int ai5D126363_wave36_runPlayer;
playergroup ai5D126363_wave36_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave36_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave36_enabled[init_i] = true;
        ai5D126363_wave36_lastUnits[init_i] = null;
        ai5D126363_wave36_lastWave[init_i] = null;
    }

    ai5D126363_wave36_trigger = TriggerCreate("ai5D126363_wave36_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave36_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave36_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave36_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave36_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave36_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave36_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave36_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave36_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave36_runFunc (bool c, bool a) {
    int p = ai5D126363_wave36_runPlayer;
    playergroup target = ai5D126363_wave36_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave36_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 220; }
    if (d == 2) { ta = 220; }
    if (d == 3) { ta = 220; }
    if (d == 4) { ta = 220; }
    tg = 0;
    if (d == 1) { tg = 45; }
    if (d == 2) { tg = 45; }
    if (d == 3) { tg = 45; }
    if (d == 4) { tg = 45; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(1507949892));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(1865764243);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(1418082495);

    ai5D126363_wave36_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Ultralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave36_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 8; }
    if (d == 2) { createCount = 8; }
    if (d == 3) { createCount = 10; }
    if (d == 4) { createCount = 10; }
    if (createCount > 0) {
        UnitCreate(createCount, "Hydralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave36_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 8; }
    if (d == 2) { createCount = 8; }
    if (d == 3) { createCount = 10; }
    if (d == 4) { createCount = 10; }
    if (createCount > 0) {
        UnitCreate(createCount, "Mutalisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave36_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 1; }
    if (d == 2) { createCount = 1; }
    if (d == 3) { createCount = 1; }
    if (d == 4) { createCount = 2; }
    if (createCount > 0) {
        UnitCreate(createCount, "Overseer", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave36_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave36_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave36_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave36_run (int p, playergroup target, bool wait) {
    ai5D126363_wave36_runPlayer = p;
    ai5D126363_wave36_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave36_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: ARMADA Wave 12 - Streaming Wave 9
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave47_enabled;
unitgroup[17] ai5D126363_wave47_lastUnits;
wave[17] ai5D126363_wave47_lastWave;
trigger ai5D126363_wave47_trigger = null;
int ai5D126363_wave47_runPlayer;
playergroup ai5D126363_wave47_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave47_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave47_enabled[init_i] = true;
        ai5D126363_wave47_lastUnits[init_i] = null;
        ai5D126363_wave47_lastWave[init_i] = null;
    }

    ai5D126363_wave47_trigger = TriggerCreate("ai5D126363_wave47_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave47_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave47_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave47_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave47_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave47_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave47_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave47_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave47_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave47_runFunc (bool c, bool a) {
    int p = ai5D126363_wave47_runPlayer;
    playergroup target = ai5D126363_wave47_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave47_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 30; }
    if (d == 2) { ta = 30; }
    if (d == 3) { ta = 30; }
    if (d == 4) { ta = 30; }
    tg = 0;
    if (d == 1) { tg = 30; }
    if (d == 2) { tg = 30; }
    if (d == 3) { tg = 30; }
    if (d == 4) { tg = 30; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack12Mid_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;

    ai5D126363_wave47_lastUnits[p] = UnitGroupEmpty();

    Wait(ts, c_timeAI);
    TriggerExecute(TriggerFind("gt_StreamingWave09TAL_Func"), true, false);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave47_run (int p, playergroup target, bool wait) {
    ai5D126363_wave47_runPlayer = p;
    ai5D126363_wave47_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave47_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave22_enabled;
unitgroup[17] ai5D126363_wave22_lastUnits;
wave[17] ai5D126363_wave22_lastWave;
trigger ai5D126363_wave22_trigger = null;
int ai5D126363_wave22_runPlayer;
playergroup ai5D126363_wave22_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave22_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave22_enabled[init_i] = true;
        ai5D126363_wave22_lastUnits[init_i] = null;
        ai5D126363_wave22_lastWave[init_i] = null;
    }

    ai5D126363_wave22_trigger = TriggerCreate("ai5D126363_wave22_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave22_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave22_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave22_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave22_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave22_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave22_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave22_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave22_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave22_runFunc (bool c, bool a) {
    int p = ai5D126363_wave22_runPlayer;
    playergroup target = ai5D126363_wave22_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave22_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 200; }
    if (d == 2) { ta = 200; }
    if (d == 3) { ta = 200; }
    if (d == 4) { ta = 200; }
    tg = 0;
    if (d == 1) { tg = 45; }
    if (d == 2) { tg = 45; }
    if (d == 3) { tg = 45; }
    if (d == 4) { tg = 45; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(272));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(246);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(294);

    ai5D126363_wave22_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 32; }
    if (d == 2) { createCount = 32; }
    if (d == 3) { createCount = 32; }
    if (d == 4) { createCount = 32; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave22_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 6; }
    if (d == 4) { createCount = 8; }
    if (createCount > 0) {
        UnitCreate(createCount, "Baneling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave22_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 4; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Ultralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave22_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 10; }
    if (d == 2) { createCount = 10; }
    if (d == 3) { createCount = 10; }
    if (d == 4) { createCount = 12; }
    if (createCount > 0) {
        UnitCreate(createCount, "Mutalisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave22_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 1; }
    if (d == 2) { createCount = 1; }
    if (d == 3) { createCount = 1; }
    if (d == 4) { createCount = 2; }
    if (createCount > 0) {
        UnitCreate(createCount, "Overseer", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave22_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave22_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave22_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave22_run (int p, playergroup target, bool wait) {
    ai5D126363_wave22_runPlayer = p;
    ai5D126363_wave22_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave22_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave4_enabled;
unitgroup[17] ai5D126363_wave4_lastUnits;
wave[17] ai5D126363_wave4_lastWave;
trigger ai5D126363_wave4_trigger = null;
int ai5D126363_wave4_runPlayer;
playergroup ai5D126363_wave4_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave4_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave4_enabled[init_i] = true;
        ai5D126363_wave4_lastUnits[init_i] = null;
        ai5D126363_wave4_lastWave[init_i] = null;
    }

    ai5D126363_wave4_trigger = TriggerCreate("ai5D126363_wave4_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave4_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave4_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave4_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave4_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave4_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave4_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave4_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave4_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave4_runFunc (bool c, bool a) {
    int p = ai5D126363_wave4_runPlayer;
    playergroup target = ai5D126363_wave4_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave4_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 130; }
    if (d == 2) { ta = 130; }
    if (d == 3) { ta = 130; }
    if (d == 4) { ta = 130; }
    tg = 0;
    if (d == 1) { tg = 45; }
    if (d == 2) { tg = 45; }
    if (d == 3) { tg = 45; }
    if (d == 4) { tg = 45; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(293));

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(244);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(512);

    ai5D126363_wave4_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 26; }
    if (d == 2) { createCount = 26; }
    if (d == 3) { createCount = 26; }
    if (d == 4) { createCount = 26; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave4_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Ultralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave4_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 8; }
    if (d == 2) { createCount = 8; }
    if (d == 3) { createCount = 10; }
    if (d == 4) { createCount = 12; }
    if (createCount > 0) {
        UnitCreate(createCount, "Mutalisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave4_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 1; }
    if (d == 2) { createCount = 1; }
    if (d == 3) { createCount = 1; }
    if (d == 4) { createCount = 2; }
    if (createCount > 0) {
        UnitCreate(createCount, "Overseer", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai5D126363_wave4_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai5D126363_wave4_lastWave[p] = WaveLastCreated();
    ai5D126363_lastWave[p] = ai5D126363_wave4_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave4_run (int p, playergroup target, bool wait) {
    ai5D126363_wave4_runPlayer = p;
    ai5D126363_wave4_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave4_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: ARMADA Wave 13 - Streaming Wave 10
//--------------------------------------------------------------------------------------------------
bool[17] ai5D126363_wave48_enabled;
unitgroup[17] ai5D126363_wave48_lastUnits;
wave[17] ai5D126363_wave48_lastWave;
trigger ai5D126363_wave48_trigger = null;
int ai5D126363_wave48_runPlayer;
playergroup ai5D126363_wave48_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave48_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai5D126363_wave48_enabled[init_i] = true;
        ai5D126363_wave48_lastUnits[init_i] = null;
        ai5D126363_wave48_lastWave[init_i] = null;
    }

    ai5D126363_wave48_trigger = TriggerCreate("ai5D126363_wave48_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave48_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_wave48_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave48_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai5D126363_wave48_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave48_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave48_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave48_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_wave48_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave48_runFunc (bool c, bool a) {
    int p = ai5D126363_wave48_runPlayer;
    playergroup target = ai5D126363_wave48_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai5D126363_wave48_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai5D126363_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 30; }
    if (d == 2) { ta = 30; }
    if (d == 3) { ta = 30; }
    if (d == 4) { ta = 30; }
    tg = 0;
    if (d == 1) { tg = 30; }
    if (d == 2) { tg = 30; }
    if (d == 3) { tg = 30; }
    if (d == 4) { tg = 30; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack13Bot_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = ai5D126363_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;

    ai5D126363_wave48_lastUnits[p] = UnitGroupEmpty();

    Wait(ts, c_timeAI);
    TriggerExecute(TriggerFind("gt_StreamingWave10PUR_Func"), true, false);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave48_run (int p, playergroup target, bool wait) {
    ai5D126363_wave48_runPlayer = p;
    ai5D126363_wave48_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_wave48_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave Wrappers
//--------------------------------------------------------------------------------------------------
void ai5D126363_wave_enable (int w, int p, bool val) {
    if (w == 2) { ai5D126363_wave2_enable(p, val); }
    if (w == 23) { ai5D126363_wave23_enable(p, val); }
    if (w == 11) { ai5D126363_wave11_enable(p, val); }
    if (w == 12) { ai5D126363_wave12_enable(p, val); }
    if (w == 13) { ai5D126363_wave13_enable(p, val); }
    if (w == 31) { ai5D126363_wave31_enable(p, val); }
    if (w == 6) { ai5D126363_wave6_enable(p, val); }
    if (w == 50) { ai5D126363_wave50_enable(p, val); }
    if (w == 24) { ai5D126363_wave24_enable(p, val); }
    if (w == 10) { ai5D126363_wave10_enable(p, val); }
    if (w == 14) { ai5D126363_wave14_enable(p, val); }
    if (w == 49) { ai5D126363_wave49_enable(p, val); }
    if (w == 25) { ai5D126363_wave25_enable(p, val); }
    if (w == 15) { ai5D126363_wave15_enable(p, val); }
    if (w == 37) { ai5D126363_wave37_enable(p, val); }
    if (w == 32) { ai5D126363_wave32_enable(p, val); }
    if (w == 7) { ai5D126363_wave7_enable(p, val); }
    if (w == 26) { ai5D126363_wave26_enable(p, val); }
    if (w == 38) { ai5D126363_wave38_enable(p, val); }
    if (w == 27) { ai5D126363_wave27_enable(p, val); }
    if (w == 16) { ai5D126363_wave16_enable(p, val); }
    if (w == 39) { ai5D126363_wave39_enable(p, val); }
    if (w == 5) { ai5D126363_wave5_enable(p, val); }
    if (w == 33) { ai5D126363_wave33_enable(p, val); }
    if (w == 17) { ai5D126363_wave17_enable(p, val); }
    if (w == 8) { ai5D126363_wave8_enable(p, val); }
    if (w == 18) { ai5D126363_wave18_enable(p, val); }
    if (w == 1) { ai5D126363_wave1_enable(p, val); }
    if (w == 40) { ai5D126363_wave40_enable(p, val); }
    if (w == 29) { ai5D126363_wave29_enable(p, val); }
    if (w == 41) { ai5D126363_wave41_enable(p, val); }
    if (w == 19) { ai5D126363_wave19_enable(p, val); }
    if (w == 35) { ai5D126363_wave35_enable(p, val); }
    if (w == 34) { ai5D126363_wave34_enable(p, val); }
    if (w == 28) { ai5D126363_wave28_enable(p, val); }
    if (w == 42) { ai5D126363_wave42_enable(p, val); }
    if (w == 64) { ai5D126363_wave64_enable(p, val); }
    if (w == 43) { ai5D126363_wave43_enable(p, val); }
    if (w == 20) { ai5D126363_wave20_enable(p, val); }
    if (w == 44) { ai5D126363_wave44_enable(p, val); }
    if (w == 9) { ai5D126363_wave9_enable(p, val); }
    if (w == 3) { ai5D126363_wave3_enable(p, val); }
    if (w == 21) { ai5D126363_wave21_enable(p, val); }
    if (w == 45) { ai5D126363_wave45_enable(p, val); }
    if (w == 30) { ai5D126363_wave30_enable(p, val); }
    if (w == 46) { ai5D126363_wave46_enable(p, val); }
    if (w == 36) { ai5D126363_wave36_enable(p, val); }
    if (w == 47) { ai5D126363_wave47_enable(p, val); }
    if (w == 22) { ai5D126363_wave22_enable(p, val); }
    if (w == 4) { ai5D126363_wave4_enable(p, val); }
    if (w == 48) { ai5D126363_wave48_enable(p, val); }
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_wave_isEnabled (int w, int p) {
    if (w == 2) { return ai5D126363_wave2_isEnabled(p); }
    if (w == 23) { return ai5D126363_wave23_isEnabled(p); }
    if (w == 11) { return ai5D126363_wave11_isEnabled(p); }
    if (w == 12) { return ai5D126363_wave12_isEnabled(p); }
    if (w == 13) { return ai5D126363_wave13_isEnabled(p); }
    if (w == 31) { return ai5D126363_wave31_isEnabled(p); }
    if (w == 6) { return ai5D126363_wave6_isEnabled(p); }
    if (w == 50) { return ai5D126363_wave50_isEnabled(p); }
    if (w == 24) { return ai5D126363_wave24_isEnabled(p); }
    if (w == 10) { return ai5D126363_wave10_isEnabled(p); }
    if (w == 14) { return ai5D126363_wave14_isEnabled(p); }
    if (w == 49) { return ai5D126363_wave49_isEnabled(p); }
    if (w == 25) { return ai5D126363_wave25_isEnabled(p); }
    if (w == 15) { return ai5D126363_wave15_isEnabled(p); }
    if (w == 37) { return ai5D126363_wave37_isEnabled(p); }
    if (w == 32) { return ai5D126363_wave32_isEnabled(p); }
    if (w == 7) { return ai5D126363_wave7_isEnabled(p); }
    if (w == 26) { return ai5D126363_wave26_isEnabled(p); }
    if (w == 38) { return ai5D126363_wave38_isEnabled(p); }
    if (w == 27) { return ai5D126363_wave27_isEnabled(p); }
    if (w == 16) { return ai5D126363_wave16_isEnabled(p); }
    if (w == 39) { return ai5D126363_wave39_isEnabled(p); }
    if (w == 5) { return ai5D126363_wave5_isEnabled(p); }
    if (w == 33) { return ai5D126363_wave33_isEnabled(p); }
    if (w == 17) { return ai5D126363_wave17_isEnabled(p); }
    if (w == 8) { return ai5D126363_wave8_isEnabled(p); }
    if (w == 18) { return ai5D126363_wave18_isEnabled(p); }
    if (w == 1) { return ai5D126363_wave1_isEnabled(p); }
    if (w == 40) { return ai5D126363_wave40_isEnabled(p); }
    if (w == 29) { return ai5D126363_wave29_isEnabled(p); }
    if (w == 41) { return ai5D126363_wave41_isEnabled(p); }
    if (w == 19) { return ai5D126363_wave19_isEnabled(p); }
    if (w == 35) { return ai5D126363_wave35_isEnabled(p); }
    if (w == 34) { return ai5D126363_wave34_isEnabled(p); }
    if (w == 28) { return ai5D126363_wave28_isEnabled(p); }
    if (w == 42) { return ai5D126363_wave42_isEnabled(p); }
    if (w == 64) { return ai5D126363_wave64_isEnabled(p); }
    if (w == 43) { return ai5D126363_wave43_isEnabled(p); }
    if (w == 20) { return ai5D126363_wave20_isEnabled(p); }
    if (w == 44) { return ai5D126363_wave44_isEnabled(p); }
    if (w == 9) { return ai5D126363_wave9_isEnabled(p); }
    if (w == 3) { return ai5D126363_wave3_isEnabled(p); }
    if (w == 21) { return ai5D126363_wave21_isEnabled(p); }
    if (w == 45) { return ai5D126363_wave45_isEnabled(p); }
    if (w == 30) { return ai5D126363_wave30_isEnabled(p); }
    if (w == 46) { return ai5D126363_wave46_isEnabled(p); }
    if (w == 36) { return ai5D126363_wave36_isEnabled(p); }
    if (w == 47) { return ai5D126363_wave47_isEnabled(p); }
    if (w == 22) { return ai5D126363_wave22_isEnabled(p); }
    if (w == 4) { return ai5D126363_wave4_isEnabled(p); }
    if (w == 48) { return ai5D126363_wave48_isEnabled(p); }
    return false;
}

//--------------------------------------------------------------------------------------------------
unitgroup ai5D126363_wave_createdUnits (int w, int p) {
    if (w == 2) { return ai5D126363_wave2_createdUnits(p); }
    if (w == 23) { return ai5D126363_wave23_createdUnits(p); }
    if (w == 11) { return ai5D126363_wave11_createdUnits(p); }
    if (w == 12) { return ai5D126363_wave12_createdUnits(p); }
    if (w == 13) { return ai5D126363_wave13_createdUnits(p); }
    if (w == 31) { return ai5D126363_wave31_createdUnits(p); }
    if (w == 6) { return ai5D126363_wave6_createdUnits(p); }
    if (w == 10) { return ai5D126363_wave10_createdUnits(p); }
    if (w == 14) { return ai5D126363_wave14_createdUnits(p); }
    if (w == 49) { return ai5D126363_wave49_createdUnits(p); }
    if (w == 25) { return ai5D126363_wave25_createdUnits(p); }
    if (w == 15) { return ai5D126363_wave15_createdUnits(p); }
    if (w == 37) { return ai5D126363_wave37_createdUnits(p); }
    if (w == 32) { return ai5D126363_wave32_createdUnits(p); }
    if (w == 7) { return ai5D126363_wave7_createdUnits(p); }
    if (w == 26) { return ai5D126363_wave26_createdUnits(p); }
    if (w == 38) { return ai5D126363_wave38_createdUnits(p); }
    if (w == 27) { return ai5D126363_wave27_createdUnits(p); }
    if (w == 16) { return ai5D126363_wave16_createdUnits(p); }
    if (w == 39) { return ai5D126363_wave39_createdUnits(p); }
    if (w == 5) { return ai5D126363_wave5_createdUnits(p); }
    if (w == 33) { return ai5D126363_wave33_createdUnits(p); }
    if (w == 17) { return ai5D126363_wave17_createdUnits(p); }
    if (w == 8) { return ai5D126363_wave8_createdUnits(p); }
    if (w == 18) { return ai5D126363_wave18_createdUnits(p); }
    if (w == 1) { return ai5D126363_wave1_createdUnits(p); }
    if (w == 40) { return ai5D126363_wave40_createdUnits(p); }
    if (w == 29) { return ai5D126363_wave29_createdUnits(p); }
    if (w == 41) { return ai5D126363_wave41_createdUnits(p); }
    if (w == 19) { return ai5D126363_wave19_createdUnits(p); }
    if (w == 35) { return ai5D126363_wave35_createdUnits(p); }
    if (w == 34) { return ai5D126363_wave34_createdUnits(p); }
    if (w == 28) { return ai5D126363_wave28_createdUnits(p); }
    if (w == 42) { return ai5D126363_wave42_createdUnits(p); }
    if (w == 64) { return ai5D126363_wave64_createdUnits(p); }
    if (w == 43) { return ai5D126363_wave43_createdUnits(p); }
    if (w == 20) { return ai5D126363_wave20_createdUnits(p); }
    if (w == 44) { return ai5D126363_wave44_createdUnits(p); }
    if (w == 9) { return ai5D126363_wave9_createdUnits(p); }
    if (w == 3) { return ai5D126363_wave3_createdUnits(p); }
    if (w == 21) { return ai5D126363_wave21_createdUnits(p); }
    if (w == 45) { return ai5D126363_wave45_createdUnits(p); }
    if (w == 30) { return ai5D126363_wave30_createdUnits(p); }
    if (w == 46) { return ai5D126363_wave46_createdUnits(p); }
    if (w == 36) { return ai5D126363_wave36_createdUnits(p); }
    if (w == 47) { return ai5D126363_wave47_createdUnits(p); }
    if (w == 22) { return ai5D126363_wave22_createdUnits(p); }
    if (w == 4) { return ai5D126363_wave4_createdUnits(p); }
    if (w == 48) { return ai5D126363_wave48_createdUnits(p); }
    return null;
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_wave_createdWave (int w, int p) {
    if (w == 2) { return ai5D126363_wave2_createdWave(p); }
    if (w == 23) { return ai5D126363_wave23_createdWave(p); }
    if (w == 11) { return ai5D126363_wave11_createdWave(p); }
    if (w == 12) { return ai5D126363_wave12_createdWave(p); }
    if (w == 13) { return ai5D126363_wave13_createdWave(p); }
    if (w == 31) { return ai5D126363_wave31_createdWave(p); }
    if (w == 6) { return ai5D126363_wave6_createdWave(p); }
    if (w == 50) { return ai5D126363_wave50_createdWave(p); }
    if (w == 24) { return ai5D126363_wave24_createdWave(p); }
    if (w == 10) { return ai5D126363_wave10_createdWave(p); }
    if (w == 14) { return ai5D126363_wave14_createdWave(p); }
    if (w == 49) { return ai5D126363_wave49_createdWave(p); }
    if (w == 25) { return ai5D126363_wave25_createdWave(p); }
    if (w == 15) { return ai5D126363_wave15_createdWave(p); }
    if (w == 37) { return ai5D126363_wave37_createdWave(p); }
    if (w == 32) { return ai5D126363_wave32_createdWave(p); }
    if (w == 7) { return ai5D126363_wave7_createdWave(p); }
    if (w == 26) { return ai5D126363_wave26_createdWave(p); }
    if (w == 38) { return ai5D126363_wave38_createdWave(p); }
    if (w == 27) { return ai5D126363_wave27_createdWave(p); }
    if (w == 16) { return ai5D126363_wave16_createdWave(p); }
    if (w == 39) { return ai5D126363_wave39_createdWave(p); }
    if (w == 5) { return ai5D126363_wave5_createdWave(p); }
    if (w == 33) { return ai5D126363_wave33_createdWave(p); }
    if (w == 17) { return ai5D126363_wave17_createdWave(p); }
    if (w == 8) { return ai5D126363_wave8_createdWave(p); }
    if (w == 18) { return ai5D126363_wave18_createdWave(p); }
    if (w == 1) { return ai5D126363_wave1_createdWave(p); }
    if (w == 40) { return ai5D126363_wave40_createdWave(p); }
    if (w == 29) { return ai5D126363_wave29_createdWave(p); }
    if (w == 41) { return ai5D126363_wave41_createdWave(p); }
    if (w == 19) { return ai5D126363_wave19_createdWave(p); }
    if (w == 35) { return ai5D126363_wave35_createdWave(p); }
    if (w == 34) { return ai5D126363_wave34_createdWave(p); }
    if (w == 28) { return ai5D126363_wave28_createdWave(p); }
    if (w == 42) { return ai5D126363_wave42_createdWave(p); }
    if (w == 64) { return ai5D126363_wave64_createdWave(p); }
    if (w == 43) { return ai5D126363_wave43_createdWave(p); }
    if (w == 20) { return ai5D126363_wave20_createdWave(p); }
    if (w == 44) { return ai5D126363_wave44_createdWave(p); }
    if (w == 9) { return ai5D126363_wave9_createdWave(p); }
    if (w == 3) { return ai5D126363_wave3_createdWave(p); }
    if (w == 21) { return ai5D126363_wave21_createdWave(p); }
    if (w == 45) { return ai5D126363_wave45_createdWave(p); }
    if (w == 30) { return ai5D126363_wave30_createdWave(p); }
    if (w == 46) { return ai5D126363_wave46_createdWave(p); }
    if (w == 36) { return ai5D126363_wave36_createdWave(p); }
    if (w == 47) { return ai5D126363_wave47_createdWave(p); }
    if (w == 22) { return ai5D126363_wave22_createdWave(p); }
    if (w == 4) { return ai5D126363_wave4_createdWave(p); }
    if (w == 48) { return ai5D126363_wave48_createdWave(p); }
    return null;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_wave_run (int w, int p, playergroup target, bool wait) {
    if (w == 2) { ai5D126363_wave2_run(p, target, wait); }
    if (w == 23) { ai5D126363_wave23_run(p, target, wait); }
    if (w == 11) { ai5D126363_wave11_run(p, target, wait); }
    if (w == 12) { ai5D126363_wave12_run(p, target, wait); }
    if (w == 13) { ai5D126363_wave13_run(p, target, wait); }
    if (w == 31) { ai5D126363_wave31_run(p, target, wait); }
    if (w == 6) { ai5D126363_wave6_run(p, target, wait); }
    if (w == 50) { ai5D126363_wave50_run(p, target, wait); }
    if (w == 24) { ai5D126363_wave24_run(p, target, wait); }
    if (w == 10) { ai5D126363_wave10_run(p, target, wait); }
    if (w == 14) { ai5D126363_wave14_run(p, target, wait); }
    if (w == 49) { ai5D126363_wave49_run(p, target, wait); }
    if (w == 25) { ai5D126363_wave25_run(p, target, wait); }
    if (w == 15) { ai5D126363_wave15_run(p, target, wait); }
    if (w == 37) { ai5D126363_wave37_run(p, target, wait); }
    if (w == 32) { ai5D126363_wave32_run(p, target, wait); }
    if (w == 7) { ai5D126363_wave7_run(p, target, wait); }
    if (w == 26) { ai5D126363_wave26_run(p, target, wait); }
    if (w == 38) { ai5D126363_wave38_run(p, target, wait); }
    if (w == 27) { ai5D126363_wave27_run(p, target, wait); }
    if (w == 16) { ai5D126363_wave16_run(p, target, wait); }
    if (w == 39) { ai5D126363_wave39_run(p, target, wait); }
    if (w == 5) { ai5D126363_wave5_run(p, target, wait); }
    if (w == 33) { ai5D126363_wave33_run(p, target, wait); }
    if (w == 17) { ai5D126363_wave17_run(p, target, wait); }
    if (w == 8) { ai5D126363_wave8_run(p, target, wait); }
    if (w == 18) { ai5D126363_wave18_run(p, target, wait); }
    if (w == 1) { ai5D126363_wave1_run(p, target, wait); }
    if (w == 40) { ai5D126363_wave40_run(p, target, wait); }
    if (w == 29) { ai5D126363_wave29_run(p, target, wait); }
    if (w == 41) { ai5D126363_wave41_run(p, target, wait); }
    if (w == 19) { ai5D126363_wave19_run(p, target, wait); }
    if (w == 35) { ai5D126363_wave35_run(p, target, wait); }
    if (w == 34) { ai5D126363_wave34_run(p, target, wait); }
    if (w == 28) { ai5D126363_wave28_run(p, target, wait); }
    if (w == 42) { ai5D126363_wave42_run(p, target, wait); }
    if (w == 64) { ai5D126363_wave64_run(p, target, wait); }
    if (w == 43) { ai5D126363_wave43_run(p, target, wait); }
    if (w == 20) { ai5D126363_wave20_run(p, target, wait); }
    if (w == 44) { ai5D126363_wave44_run(p, target, wait); }
    if (w == 9) { ai5D126363_wave9_run(p, target, wait); }
    if (w == 3) { ai5D126363_wave3_run(p, target, wait); }
    if (w == 21) { ai5D126363_wave21_run(p, target, wait); }
    if (w == 45) { ai5D126363_wave45_run(p, target, wait); }
    if (w == 30) { ai5D126363_wave30_run(p, target, wait); }
    if (w == 46) { ai5D126363_wave46_run(p, target, wait); }
    if (w == 36) { ai5D126363_wave36_run(p, target, wait); }
    if (w == 47) { ai5D126363_wave47_run(p, target, wait); }
    if (w == 22) { ai5D126363_wave22_run(p, target, wait); }
    if (w == 4) { ai5D126363_wave4_run(p, target, wait); }
    if (w == 48) { ai5D126363_wave48_run(p, target, wait); }
}

//--------------------------------------------------------------------------------------------------
// Attack Wave Sequence
//--------------------------------------------------------------------------------------------------
trigger ai5D126363_waves_trigger = null;
int ai5D126363_waves_runPlayer;
playergroup ai5D126363_waves_runTarget;

//--------------------------------------------------------------------------------------------------
void ai5D126363_waves_init () {
    ai5D126363_waves_trigger = TriggerCreate("ai5D126363_waves_runFunc");
}

//--------------------------------------------------------------------------------------------------
bool ai5D126363_waves_runFunc (bool c, bool a) {
    int p = ai5D126363_waves_runPlayer;
    playergroup target = ai5D126363_waves_runTarget;

    if (p < 0 || p >= 16) {
        return false;
    }

    ai5D126363_wave2_run(p, target, true);
    ai5D126363_wave23_run(p, target, true);
    ai5D126363_wave11_run(p, target, true);
    ai5D126363_wave12_run(p, target, true);
    ai5D126363_wave13_run(p, target, true);
    ai5D126363_wave31_run(p, target, true);
    ai5D126363_wave6_run(p, target, true);
    ai5D126363_wave50_run(p, target, true);
    ai5D126363_wave24_run(p, target, true);
    ai5D126363_wave10_run(p, target, true);
    ai5D126363_wave14_run(p, target, true);
    ai5D126363_wave49_run(p, target, true);
    ai5D126363_wave25_run(p, target, true);
    ai5D126363_wave15_run(p, target, true);
    ai5D126363_wave37_run(p, target, true);
    ai5D126363_wave32_run(p, target, true);
    ai5D126363_wave7_run(p, target, true);
    ai5D126363_wave26_run(p, target, true);
    ai5D126363_wave38_run(p, target, true);
    ai5D126363_wave27_run(p, target, true);
    ai5D126363_wave16_run(p, target, true);
    ai5D126363_wave39_run(p, target, true);
    ai5D126363_wave5_run(p, target, true);
    ai5D126363_wave33_run(p, target, true);
    ai5D126363_wave17_run(p, target, true);
    ai5D126363_wave8_run(p, target, true);
    ai5D126363_wave18_run(p, target, true);
    ai5D126363_wave1_run(p, target, true);
    ai5D126363_wave40_run(p, target, true);
    ai5D126363_wave29_run(p, target, true);
    ai5D126363_wave41_run(p, target, true);
    ai5D126363_wave19_run(p, target, true);
    ai5D126363_wave35_run(p, target, true);
    ai5D126363_wave34_run(p, target, true);
    ai5D126363_wave28_run(p, target, true);
    ai5D126363_wave42_run(p, target, true);
    ai5D126363_wave64_run(p, target, true);
    ai5D126363_wave43_run(p, target, true);
    ai5D126363_wave20_run(p, target, true);
    ai5D126363_wave44_run(p, target, true);
    ai5D126363_wave9_run(p, target, true);
    ai5D126363_wave3_run(p, target, true);
    ai5D126363_wave21_run(p, target, true);
    ai5D126363_wave45_run(p, target, true);
    ai5D126363_wave30_run(p, target, true);
    ai5D126363_wave46_run(p, target, true);
    ai5D126363_wave36_run(p, target, true);
    ai5D126363_wave47_run(p, target, true);
    ai5D126363_wave22_run(p, target, true);
    ai5D126363_wave4_run(p, target, true);
    ai5D126363_wave48_run(p, target, true);

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_waves_run (int p, playergroup target) {
    ai5D126363_waves_runPlayer = p;
    ai5D126363_waves_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai5D126363_waves_trigger, false, false);
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_waves_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }

    ai5D126363_wave2_enable(p, val);
    ai5D126363_wave23_enable(p, val);
    ai5D126363_wave11_enable(p, val);
    ai5D126363_wave12_enable(p, val);
    ai5D126363_wave13_enable(p, val);
    ai5D126363_wave31_enable(p, val);
    ai5D126363_wave6_enable(p, val);
    ai5D126363_wave50_enable(p, val);
    ai5D126363_wave24_enable(p, val);
    ai5D126363_wave10_enable(p, val);
    ai5D126363_wave14_enable(p, val);
    ai5D126363_wave49_enable(p, val);
    ai5D126363_wave25_enable(p, val);
    ai5D126363_wave15_enable(p, val);
    ai5D126363_wave37_enable(p, val);
    ai5D126363_wave32_enable(p, val);
    ai5D126363_wave7_enable(p, val);
    ai5D126363_wave26_enable(p, val);
    ai5D126363_wave38_enable(p, val);
    ai5D126363_wave27_enable(p, val);
    ai5D126363_wave16_enable(p, val);
    ai5D126363_wave39_enable(p, val);
    ai5D126363_wave5_enable(p, val);
    ai5D126363_wave33_enable(p, val);
    ai5D126363_wave17_enable(p, val);
    ai5D126363_wave8_enable(p, val);
    ai5D126363_wave18_enable(p, val);
    ai5D126363_wave1_enable(p, val);
    ai5D126363_wave40_enable(p, val);
    ai5D126363_wave29_enable(p, val);
    ai5D126363_wave41_enable(p, val);
    ai5D126363_wave19_enable(p, val);
    ai5D126363_wave35_enable(p, val);
    ai5D126363_wave34_enable(p, val);
    ai5D126363_wave28_enable(p, val);
    ai5D126363_wave42_enable(p, val);
    ai5D126363_wave64_enable(p, val);
    ai5D126363_wave43_enable(p, val);
    ai5D126363_wave20_enable(p, val);
    ai5D126363_wave44_enable(p, val);
    ai5D126363_wave9_enable(p, val);
    ai5D126363_wave3_enable(p, val);
    ai5D126363_wave21_enable(p, val);
    ai5D126363_wave45_enable(p, val);
    ai5D126363_wave30_enable(p, val);
    ai5D126363_wave46_enable(p, val);
    ai5D126363_wave36_enable(p, val);
    ai5D126363_wave47_enable(p, val);
    ai5D126363_wave22_enable(p, val);
    ai5D126363_wave4_enable(p, val);
    ai5D126363_wave48_enable(p, val);
}

//--------------------------------------------------------------------------------------------------
void ai5D126363_waves_stop () {
    TriggerStop(ai5D126363_waves_trigger);

    TriggerStop(ai5D126363_wave2_trigger);
    TriggerStop(ai5D126363_wave23_trigger);
    TriggerStop(ai5D126363_wave11_trigger);
    TriggerStop(ai5D126363_wave12_trigger);
    TriggerStop(ai5D126363_wave13_trigger);
    TriggerStop(ai5D126363_wave31_trigger);
    TriggerStop(ai5D126363_wave6_trigger);
    TriggerStop(ai5D126363_wave50_trigger);
    TriggerStop(ai5D126363_wave24_trigger);
    TriggerStop(ai5D126363_wave10_trigger);
    TriggerStop(ai5D126363_wave14_trigger);
    TriggerStop(ai5D126363_wave49_trigger);
    TriggerStop(ai5D126363_wave25_trigger);
    TriggerStop(ai5D126363_wave15_trigger);
    TriggerStop(ai5D126363_wave37_trigger);
    TriggerStop(ai5D126363_wave32_trigger);
    TriggerStop(ai5D126363_wave7_trigger);
    TriggerStop(ai5D126363_wave26_trigger);
    TriggerStop(ai5D126363_wave38_trigger);
    TriggerStop(ai5D126363_wave27_trigger);
    TriggerStop(ai5D126363_wave16_trigger);
    TriggerStop(ai5D126363_wave39_trigger);
    TriggerStop(ai5D126363_wave5_trigger);
    TriggerStop(ai5D126363_wave33_trigger);
    TriggerStop(ai5D126363_wave17_trigger);
    TriggerStop(ai5D126363_wave8_trigger);
    TriggerStop(ai5D126363_wave18_trigger);
    TriggerStop(ai5D126363_wave1_trigger);
    TriggerStop(ai5D126363_wave40_trigger);
    TriggerStop(ai5D126363_wave29_trigger);
    TriggerStop(ai5D126363_wave41_trigger);
    TriggerStop(ai5D126363_wave19_trigger);
    TriggerStop(ai5D126363_wave35_trigger);
    TriggerStop(ai5D126363_wave34_trigger);
    TriggerStop(ai5D126363_wave28_trigger);
    TriggerStop(ai5D126363_wave42_trigger);
    TriggerStop(ai5D126363_wave64_trigger);
    TriggerStop(ai5D126363_wave43_trigger);
    TriggerStop(ai5D126363_wave20_trigger);
    TriggerStop(ai5D126363_wave44_trigger);
    TriggerStop(ai5D126363_wave9_trigger);
    TriggerStop(ai5D126363_wave3_trigger);
    TriggerStop(ai5D126363_wave21_trigger);
    TriggerStop(ai5D126363_wave45_trigger);
    TriggerStop(ai5D126363_wave30_trigger);
    TriggerStop(ai5D126363_wave46_trigger);
    TriggerStop(ai5D126363_wave36_trigger);
    TriggerStop(ai5D126363_wave47_trigger);
    TriggerStop(ai5D126363_wave22_trigger);
    TriggerStop(ai5D126363_wave4_trigger);
    TriggerStop(ai5D126363_wave48_trigger);
}

//--------------------------------------------------------------------------------------------------
// Configuration
//--------------------------------------------------------------------------------------------------
void ai5D126363_setDefGather (int p, point val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai5D126363_defGather[p] = val;
}

//--------------------------------------------------------------------------------------------------
string ai5D126363_getCustomData (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_customData[p];
}

//--------------------------------------------------------------------------------------------------
wave ai5D126363_getLastWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai5D126363_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
// Start
//--------------------------------------------------------------------------------------------------
bool ai5D126363_initialized = false;

//--------------------------------------------------------------------------------------------------
void ai5D126363_start (int p) {
    int init_i;

    if (p < 0 || p >= 16) {
        return;
    }
    if (!ai5D126363_initialized) {
        ai5D126363_wave2_init();
        ai5D126363_wave23_init();
        ai5D126363_wave11_init();
        ai5D126363_wave12_init();
        ai5D126363_wave13_init();
        ai5D126363_wave31_init();
        ai5D126363_wave6_init();
        ai5D126363_wave50_init();
        ai5D126363_wave24_init();
        ai5D126363_wave10_init();
        ai5D126363_wave14_init();
        ai5D126363_wave49_init();
        ai5D126363_wave25_init();
        ai5D126363_wave15_init();
        ai5D126363_wave37_init();
        ai5D126363_wave32_init();
        ai5D126363_wave7_init();
        ai5D126363_wave26_init();
        ai5D126363_wave38_init();
        ai5D126363_wave27_init();
        ai5D126363_wave16_init();
        ai5D126363_wave39_init();
        ai5D126363_wave5_init();
        ai5D126363_wave33_init();
        ai5D126363_wave17_init();
        ai5D126363_wave8_init();
        ai5D126363_wave18_init();
        ai5D126363_wave1_init();
        ai5D126363_wave40_init();
        ai5D126363_wave29_init();
        ai5D126363_wave41_init();
        ai5D126363_wave19_init();
        ai5D126363_wave35_init();
        ai5D126363_wave34_init();
        ai5D126363_wave28_init();
        ai5D126363_wave42_init();
        ai5D126363_wave64_init();
        ai5D126363_wave43_init();
        ai5D126363_wave20_init();
        ai5D126363_wave44_init();
        ai5D126363_wave9_init();
        ai5D126363_wave3_init();
        ai5D126363_wave21_init();
        ai5D126363_wave45_init();
        ai5D126363_wave30_init();
        ai5D126363_wave46_init();
        ai5D126363_wave36_init();
        ai5D126363_wave47_init();
        ai5D126363_wave22_init();
        ai5D126363_wave4_init();
        ai5D126363_wave48_init();
        ai5D126363_waves_init();

        for (init_i = 0; init_i <= 16; init_i += 1) {
            ai5D126363_defGather[init_i] = PointFromId(0);
        }

        ai5D126363_initialized = true;
    }

    AICampaignStart(p);
}
